{"version":3,"sources":["utils/checkTokenExp.ts","pages/blogs/[slug].tsx","pages/category.tsx","pages/forgot_password.tsx","redux/types/commentType.ts","pages/reset_password/[slug].tsx","pages/update_blog/[slug].tsx","redux/action/authAction.ts","components/comments/AvatarComment.tsx","components/editor/LiteQuill.tsx","components/comments/Input.tsx","redux/action/commentAction.ts","components/comments/CommentList.tsx","components/comments/AvatarReply.tsx","components/comments/Comments.tsx","components/blog/DisplayBlog.tsx","pages/blog/[slug].tsx","components/Auth/LoginPass.tsx","components/Auth/LoginSms.tsx","components/Auth/SocialLogin.tsx","pages/login.tsx","components/profile/UserInfor.tsx","components/profile/OrtherInfor.tsx","components/profile/UserBlog.tsx","pages/profile/[slug].tsx","components/Auth/RegisterForm.tsx","pages/register.tsx","pages sync /^/.*$","redux/action/blogAction.ts","redux/types/blogType.ts","redux/types/authType.ts","components/Global/NotFound.tsx","redux/types/alertType.ts","redux/types/categoryType.ts","PageRender.tsx","components/Global/Search.tsx","components/Global/Menu.tsx","components/Global/Header.tsx","components/Global/Footer.tsx","SocketClient.tsx","App.tsx","redux/reducer/authReducer.ts","redux/reducer/alertReducer.ts","redux/reducer/categoryReducer.ts","redux/reducer/blogReducer.ts","redux/reducer/blogCategoryReducer.ts","redux/reducer/otherInfoReducer.ts","redux/reducer/blogUserReducer.ts","redux/reducer/commentReducer.ts","redux/types/socketType.ts","redux/reducer/socketReducer.ts","redux/reducer/index.ts","redux/store.ts","index.tsx","utils/ImageUpload.ts","components/alert/Loading.tsx","utils/Valid.ts","redux/action/profileActions.ts","components/alert/toast.tsx","components/alert/Alert.tsx","components/Global/Pagination.tsx","components/cards/CardHoriz.tsx","redux/action/categoryAction.ts","components/cards/CreateForm.tsx","components/editor/ReactQuill.tsx","pages/create_blog.tsx","components/cards/CartVert.tsx","components/Global/Loading.tsx","redux/types/profileType.ts","pages/index.tsx","utils/config.ts","utils/FetchData.ts","pages/active/[slug].tsx"],"names":["checkTokenExp","token","dispatch","a","jwtDecode","exp","Date","now","getApi","res","type","AUTH","payload","data","access_token","BlogByCategory","useSelector","state","category","blogCategory","useDispatch","slug","useParams","history","useHistory","search","location","useState","categoryId","setCategoryId","blogs","setBlogs","total","setTotal","useEffect","cate","find","item","name","_id","every","id","getBlogsByCategoryId","push","className","length","map","blog","callback","page","newSearch","Category","setName","auth","edit","setEdit","user","role","onSubmit","e","preventDefault","updateCategory","createCategory","htmlFor","style","cursor","onClick","value","onChange","target","window","confirm","deleteCategory","ForgotPassword","account","setAccount","maxWidth","forgotPassword","CREATE_COMMENT","GET_COMMENTS","REPLY_COMMENT","UPDATE_COMMENT","UPDATE_REPLY","DELETE_COMMENT","DELETE_REPLY","ResetPassword","password","setPassword","cf_password","setCfPassword","typePass","setTypePass","typeCfPass","setTypeCfPass","handleChangeInput","action","resetPassword","letterSpacing","UpdateBlog","login","userLogin","ALERT","loading","postApi","console","log","success","localStorage","setItem","errors","response","msg","register","userRegister","check","ValidRegister","errLength","errMsg","refreshToken","getItem","removeItem","logout","result","href","googlelogin","id_token","facebookLogin","accessToken","userID","loginSms","phone","validPhone","valid","verifySms","code","prompt","setTimeout","AvatarComment","src","avatar","alt","to","container","LiteQuill","body","setBody","modules","toolbar","theme","placeholder","Input","divRef","useRef","content","ref","dangerouslySetInnerHTML","__html","display","div","current","innerText","trim","undefined","getComments","num","comments","message","CommentList","comment","children","onReply","setOnReply","handleDelete","delApi","Nav","newComment","patchApi","opacity","color","blog_user_id","createdAt","toLocaleString","alert","blog_id","reply_user","replyCM","comment_root","toISOString","replyComment","AvatarReply","Comments","showReply","setShowReply","next","setNext","pointerEvents","slice","reply","Number","DisplayBlog","showComments","setShowComments","setLoading","fetchComments","useCallback","title","createComment","Loading","Pagination","DetailBlog","socket","setBlog","setLoadig","error","setError","then","catch","err","emit","showErrMsg","LoginPass","setUserLogin","disabled","LoginSms","setPhone","SocialLogin","client_id","cookiepolicy","onSuccess","googleUser","getAuthResponse","appId","authResponse","Login","sms","setSms","url","replace","UserInfor","setUser","event","updateUser","URL","createObjectURL","accept","files","file","defaultValue","NotFound","OrtherInfor","otherInfo","other","setOther","getOtherInfo","newUser","Userblog","blogUser","user_id","getBlogsByUser","CardHoriz","Profile","UserBlog","RegisterForm","setUserRegister","Register","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","createBlog","thumbnail","imageUpload","photo","newBlog","CREATE_BLOG_USER_ID","getHomeBlogs","GET_HOME_BLOG","GET_BLOG_BY_CATEGORY_ID","GET_BLOGS_USER_ID","updateBlog","putApi","deleteBlog","DELETE_BLOG_USER_ID","minHeight","top","left","transform","CREATE_CATEGORY","GET_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","PageRender","React","createElement","require","default","generatePage","Search","setSearch","delayDebounce","clearTimeout","innerWidth","backgroundColor","zIndex","borderRadius","maxHeight","overflow","Menu","navLinks","label","path","pathname","useLocation","isActive","pn","link","index","data-bs-toggle","aria-expanded","aria-labelledby","Header","position","data-bs-target","aria-controls","aria-label","Footer","rel","SocketClient","on","off","App","gapi","load","client","init","clientId","plugin_name","getCategory","io","close","Alert","exact","component","authReducer","alertReducer","categoryReducer","types","filter","homeBlogsReducer","blogCategoryReducer","otherInfoReducer","GET_OTHER_INFO","blogUserReducer","initState","commentReducer","SOCKET","socketReducer","combineReducers","homeBLogs","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","checkImage","size","includes","formData","FormData","append","fetch","method","json","public_id","background","width","height","viewBox","stroke","strokeWidth","fill","points","x","y","test","checkPassword","validCreateBlog","description","shallowEquality","obj1","obj2","JSON","stringify","Toast","bgColor","right","minWidth","data-bs-dismiss","showSuccessMsg","setPage","newArr","Array","_","i","handlePagination","aria-hidden","objectFit","marginLeft","justifyContent","CateType","newCategory","categories","errCode","CreateForm","rows","resize","bottom","Quill","quillRef","handleChangeImage","input","click","onchange","quill","range","getEditor","getSelection","insertEmbed","getModule","addHandler","CreateBlog","text","setText","oldData","setOldData","handleSubmit","newData","CartVert","text-muted","text-capitalize","Home","homeBlog","count","API_URL","post","axios","headers","Authorization","get","patch","put","delete","Active","setErrMsg","successMsg","setSuccessMsg","active_token"],"mappings":"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","file":"static/js/main.725fc2c0.chunk.js","sourcesContent":["import { AUTH } from './../redux/types/authType';\r\nimport jwtDecode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\nimport { getApi } from './FetchData'\r\ninterface IToken {\r\n   exp: number\r\n   iat: number\r\n   id: string\r\n}\r\n\r\nexport const checkTokenExp = async(token: string, dispatch: any) => {\r\n   const decoded: IToken = jwtDecode(token);\r\n\r\n   if(decoded.exp >= Date.now()/1000) return;\r\n\r\n   const res = await getApi('refresh_token')\r\n   dispatch({type: AUTH, payload: res.data})\r\n   return res.data.access_token;\r\n}","import React, { useState, useEffect} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore, IParams } from '../../utils/TypeScript'\r\nimport { getBlogsByCategoryId } from '../../redux/action/blogAction'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport NotFound from '../../components/Global/NotFound'\r\nimport CartVert from '../../components/cards/CartVert'\r\nimport Pagination from '../../components/Global/Pagination'\r\nimport { useHistory } from 'react-router-dom'\r\nconst BlogByCategory = () => {\r\n   const { category, blogCategory } = useSelector((state: RootStore) => state)\r\n   const dispatch = useDispatch()\r\n   const { slug } = useParams<IParams>()\r\n   const history = useHistory()\r\n   const { search } =  history.location;\r\n   const [categoryId, setCategoryId] = useState('')\r\n   const [blogs, setBlogs] = useState<IBlog[]>([])\r\n   const [total, setTotal] = useState(0)\r\n   useEffect(() => {\r\n      const cate = category.find(item => item.name === slug)\r\n      if(!cate) return;\r\n      setCategoryId(cate._id)\r\n   }, [category, slug])\r\n\r\n   useEffect(() => {\r\n      if(!categoryId) return;\r\n      if(blogCategory.every(item => item.id !== categoryId)) {\r\n         dispatch(getBlogsByCategoryId(categoryId, search))\r\n      } else {\r\n         const data = blogCategory.find(item => item.id === categoryId)\r\n         if(!data) return;\r\n         \r\n         setBlogs(data.blogs)\r\n         setTotal(data.total)\r\n\r\n         if(data.search) history.push(data.search)\r\n      }\r\n   }, [categoryId, blogCategory, dispatch, search])\r\n\r\n\r\n   const handlePagination = (page: number) => {\r\n      const newSearch = `?page=${page}`\r\n      dispatch(getBlogsByCategoryId(categoryId, newSearch))\r\n   }\r\n\r\n   if(!blogs) return <NotFound />\r\n   return ( \r\n      <div className=\"blogs_category\">\r\n         <div className=\"show_blogs\">\r\n            {\r\n               blogs && blogs.length > 0 &&\r\n               blogs.map(blog => (\r\n                  <CartVert key={blog._id} blog={blog} />\r\n               ))\r\n            }\r\n         </div>\r\n\r\n         {  total > 1 &&\r\n               <Pagination\r\n            total={total}\r\n            callback={handlePagination}\r\n         />}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default BlogByCategory","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { FormSubmit, RootStore } from '../utils/TypeScript'\r\nimport NotFound from '../components/Global/NotFound'\r\nimport { createCategory, updateCategory, deleteCategory } from '../redux/action/categoryAction'\r\nimport { ICategory } from '../utils/TypeScript'\r\nconst Category = () => {\r\n   const [name, setName] = useState('')\r\n   const { auth, category } = useSelector((state: RootStore) => state)\r\n   const [edit, setEdit] = useState<ICategory | null>(null)\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n      if(edit) setName(edit.name)\r\n   }, [edit])\r\n\r\n   const handleSubmit = (e: FormSubmit) => {\r\n      e.preventDefault();\r\n      if (!auth.access_token || !name) return;\r\n\r\n      if(edit) {\r\n         if(edit.name === name) return;\r\n         const data = { ...edit, name }\r\n         dispatch(updateCategory(data, auth.access_token))\r\n      } else {\r\n         dispatch(createCategory(name, auth.access_token))\r\n      }\r\n      setName('')\r\n      setEdit(null)\r\n   }\r\n\r\n   const handleDelete = (id: string) => {\r\n      if(!auth.access_token) return;\r\n      if(window.confirm('Are you sure want to delete this category?'))\r\n      dispatch(deleteCategory(id, auth.access_token))\r\n   }\r\n\r\n   if (auth.user?.role !== 'admin') return <NotFound />;\r\n   return (\r\n      <div className='category'>\r\n         <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"category\">Category</label>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n\r\n               {\r\n                  edit &&\r\n                  <i className=\"fas fa-times mx-2\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                     setEdit(null)\r\n                     setName('')\r\n                  }}\r\n               ></i>}\r\n\r\n               <input type=\"text\" name='category' id='category'\r\n                  value={name} onChange={(e) => setName(e.target.value)}\r\n               />\r\n\r\n               <button type='submit'>\r\n                  {\r\n                     edit ? 'Update' : 'Create'\r\n                  }\r\n               </button>\r\n            </div>\r\n         </form>\r\n\r\n         <div>\r\n\r\n            {\r\n               category && category.length > 0 &&\r\n               category.map((item) =>\r\n               (\r\n                  <div className=\"category_row\" key={item._id}>\r\n                     <p className='m-0 text-capitalize'>{item.name}</p>\r\n\r\n                     <div>\r\n                        <i className=\"fas fa-edit mx-2\"\r\n                           onClick={() => setEdit(item)}\r\n                        ></i>\r\n                        <i className=\"fas fa-trash-alt\"\r\n                           onClick={() => handleDelete(item._id)}\r\n                        ></i>\r\n                     </div>\r\n                  </div>\r\n               ))\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Category","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { FormSubmit } from '../utils/TypeScript'\r\nimport { forgotPassword } from '../redux/action/authAction'\r\nconst ForgotPassword = () => {\r\n   const [account, setAccount] = useState<string>('')\r\n   const dispatch = useDispatch();\r\n\r\n   const handleSubmit = (e: FormSubmit) => {\r\n      e.preventDefault();\r\n      dispatch(forgotPassword(account))\r\n   }\r\n   return (\r\n      <div className='my-2' style={{ maxWidth: '500px'}}>\r\n         <h2>Forgot Password?</h2>\r\n\r\n         <form className='form-group' onSubmit={handleSubmit}>\r\n            <label htmlFor=\"account\">Email / Phone Number</label>\r\n            <div className='d-flex align-items-center'>\r\n               <input type=\"text\" className='form-control' id='account' name='account'\r\n                  onChange={(e) => setAccount(e.target.value)}\r\n               />\r\n\r\n               <button className='btn btn-primary mx-2 d-flex align-items-center'\r\n               >\r\n                  <i className='fas fa-paper-plane mr-3 '></i>\r\n                  <span>Send</span>\r\n               </button>\r\n            </div>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ForgotPassword","import { IComment } from \"../../utils/TypeScript\";\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT';\r\nexport const GET_COMMENTS = 'GET_COMMENTS';\r\nexport const REPLY_COMMENT = 'REPLY_COMMENT';\r\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT';\r\nexport const UPDATE_REPLY = 'UPDATE_REPLY';\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\r\nexport const DELETE_REPLY = 'DELETE_REPLY';\r\n\r\nexport interface ICommentState {\r\n   data: IComment[];\r\n   total: number;\r\n}\r\n\r\nexport interface ICreateCommentType {\r\n   type: typeof CREATE_COMMENT,\r\n   payload: IComment\r\n}\r\n\r\nexport interface IGetCommentsType {\r\n   type: typeof GET_COMMENTS,\r\n   payload: ICommentState\r\n}\r\n\r\nexport interface IReplyCommentType {\r\n   type: typeof REPLY_COMMENT,\r\n   payload: IComment\r\n}\r\n\r\nexport interface IUpdateCommentType {\r\n   type: typeof UPDATE_COMMENT | typeof UPDATE_REPLY,\r\n   payload: IComment\r\n}\r\n\r\nexport interface IDeleteCommentType {\r\n   type: typeof DELETE_COMMENT | typeof DELETE_REPLY,\r\n   payload: IComment\r\n}\r\n\r\n\r\nexport type ICommentType = ICreateCommentType | IGetCommentsType | IReplyCommentType | IUpdateCommentType | IDeleteCommentType;","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from '../../utils/TypeScript'\r\nimport { useDispatch } from 'react-redux'\r\nimport { InputChange,FormSubmit  } from '../../utils/TypeScript'\r\nimport { resetPassword } from '../../redux/action/profileActions'\r\nconst ResetPassword = () => {\r\n   const { slug } = useParams<IParams>()\r\n   const dispatch = useDispatch();\r\n\r\n   const [password, setPassword] = useState<string>('')\r\n   const [cf_password, setCfPassword] = useState<string>('')\r\n   const [typePass, setTypePass] = useState(false);\r\n   const [typeCfPass, setTypeCfPass] = useState(false);\r\n\r\n\r\n   const handleChangeInput = (e: InputChange) => {\r\n      const { value, name } = e.target;\r\n      if (name === 'password') {\r\n         setPassword(value)\r\n      } else if (name === 'cf_password') {\r\n         setCfPassword(value)\r\n      }\r\n   }\r\n\r\n   const handleSubmit = (e: FormSubmit) => {\r\n      e.preventDefault();\r\n      dispatch(resetPassword(password, cf_password, slug))\r\n   }\r\n\r\n   return (\r\n      <div className='auth_page'>\r\n         <form action=\"\" className='auth_box' onSubmit={handleSubmit}>\r\n            <h3 className='text-center text-uppercase' style={{ letterSpacing: 2 }}>Reset Password</h3>\r\n\r\n            <div className=\"form-group mb-3\">\r\n               <label className='form-label' htmlFor=\"password\">Password</label>\r\n               <div className=\"pass\">\r\n                  <input type={typePass ? 'text' : 'password'}\r\n                     className='form-control'\r\n                     name='password' id='password'\r\n                     value={password}\r\n                     onChange={handleChangeInput}\r\n                  />\r\n                  <small\r\n                     onClick={() => setTypePass(!typePass)}>\r\n                     {typePass ? 'hide' : 'show'}\r\n                  </small>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n               <label className='form-label' htmlFor=\"cf_password\">Confirm password</label>\r\n               <div className=\"pass\">\r\n                  <input type={typeCfPass ? 'text' : 'password'}\r\n                     className='form-control'\r\n                     name='cf_password' id='cf_password'\r\n                     value={cf_password}\r\n                     onChange={handleChangeInput}\r\n                  />\r\n                  <small\r\n                     onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                     {typeCfPass ? 'hide' : 'show'}\r\n                  </small>\r\n               </div>\r\n            </div>\r\n\r\n            <button type='submit' className='btn btn-dark w-100 mt-4'>\r\n               Save Changes\r\n            </button>\r\n         </form>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ResetPassword","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from '../../utils/TypeScript'\r\nimport CreateBlog from '../create_blog'\r\nconst UpdateBlog = () => {\r\n   const { slug } = useParams<IParams>()\r\n\r\n   return <CreateBlog id={slug} />\r\n}\r\n\r\nexport default UpdateBlog","import { IUserLogin, IUserRegister } from \"../../utils/TypeScript\"\r\nimport { Dispatch } from \"react\"\r\nimport { postApi, getApi } from \"../../utils/FetchData\"\r\nimport { AUTH, IAuthType } from \"../types/authType\"\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\nimport { ValidRegister, validPhone, checkPassword } from \"../../utils/Valid\"\r\nimport { checkTokenExp } from \"../../utils/checkTokenExp\"\r\nexport const login = (userLogin: IUserLogin) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await postApi('login', userLogin);\r\n         console.log(res);\r\n         dispatch({\r\n            type: AUTH,\r\n            payload: {\r\n               access_token: res.data.access_token,\r\n               user: res.data.user\r\n            }\r\n         })\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: \"Login Success!\" }\r\n         })\r\n         localStorage.setItem('logged', 'noze')\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const register = (userRegister: IUserRegister) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      const check = ValidRegister(userRegister);\r\n      if (check.errLength > 0) {\r\n         return dispatch({\r\n            type: ALERT,\r\n            payload: { errors: check.errMsg }\r\n         })\r\n      }\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await postApi('register', userRegister);\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: res.data.msg }\r\n         })\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n\r\n      }\r\n   }\r\n}\r\n\r\nexport const refreshToken = () => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      const logged = localStorage.getItem('logged')\r\n      if(logged !== 'noze') return;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n         const res = await getApi('refresh_token')\r\n         \r\n         dispatch({\r\n            type: AUTH,\r\n            payload: res.data\r\n         })\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: {}\r\n         })\r\n      }\r\n      catch (err: any) {\r\n         dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n         localStorage.removeItem('logged')\r\n      }\r\n   }\r\n}\r\n\r\nexport const logout = (token: string) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      const result = await checkTokenExp(token, dispatch);\r\n      const access_token = result ? result : token\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         localStorage.removeItem('logged');\r\n         await getApi('logout', access_token);\r\n         window.location.href = '/'\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: {}\r\n         })\r\n      }\r\n      catch (err: any) {\r\n         dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n      }\r\n   }\r\n}\r\n\r\nexport const googlelogin = (id_token: string) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await postApi('google_login', {id_token});\r\n         console.log(res);\r\n         dispatch({\r\n            type: AUTH,\r\n            payload: res.data\r\n         })\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: \"Login Success!\" }\r\n         })\r\n         localStorage.setItem('logged', 'noze')\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const facebookLogin = (accessToken: string,  userID: string) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await postApi('facebook_login', {accessToken, userID});\r\n         dispatch({\r\n            type: AUTH,\r\n            payload: res.data\r\n         })\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: \"Login Success!\" }\r\n         })\r\n         localStorage.setItem('logged', 'noze')\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const loginSms = (phone: string) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      const check = validPhone(phone)\r\n      if(!check) return dispatch({\r\n         type: ALERT,\r\n         payload: { errors: \"Phone number format is incorrect\" }\r\n      })\r\n      try {\r\n         \r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await postApi('login_sms', { phone })\r\n         if(!res.data.valid) {\r\n            verifySms(phone, dispatch)\r\n         }         \r\n         // localStorage.setItem('logged', 'noze')\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nconst verifySms = async(phone: string, dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n   const code = prompt('Enter your code')\r\n   if(!code) return;\r\n   try {\r\n      dispatch({\r\n         type: ALERT,\r\n         payload: { loading: true }\r\n      })\r\n      const res = await postApi('verify_sms', { phone, code })\r\n      dispatch({\r\n         type: AUTH,\r\n         payload: res.data\r\n      })\r\n      dispatch({\r\n         type: ALERT,\r\n         payload: { success: \"Login Success!\" }\r\n      })\r\n      localStorage.setItem('logged', 'noze')\r\n   }\r\n   catch(err: any) {\r\n      dispatch({\r\n         type: ALERT,\r\n         payload: {errors: err.response.data.msg}\r\n      })\r\n      setTimeout(() => {\r\n         verifySms(phone, dispatch)\r\n      }, 500)\r\n   }\r\n}\r\n\r\n\r\nexport const forgotPassword = (account: string) => {\r\n   return async(dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n\r\n         const res = await postApi('forgot_password', { account })\r\n         console.log(res);\r\n         dispatch({\r\n            type: ALERT,\r\n            payload:{ success: res.data.msg}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT, \r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\n","import React from 'react'\r\nimport { IUser } from '../../utils/TypeScript'\r\nimport { Link } from 'react-router-dom'\r\ninterface IProps {\r\n   user: IUser\r\n}\r\nconst AvatarComment = ({ user} : IProps) => {\r\n   return (\r\n      <div className='me-1 avatar_comment'>\r\n         <img src={user.avatar} alt=\"Avatar\" />\r\n\r\n         <small className='text-muted d-block text-break'>\r\n            <Link to={`/profile/${user._id}`}>\r\n               {user.name}\r\n            </Link>\r\n         </small>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AvatarComment","import React from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\n\r\ninterface IProps {\r\n   body: string,\r\n   setBody: (body: string) => void\r\n}\r\n\r\nconst LiteQuill = ({ body, setBody}: IProps) => {\r\n\r\n   const modules = { toolbar: { container } }\r\n   return (\r\n      <div>\r\n         <ReactQuill \r\n            theme='snow'\r\n            modules={modules}\r\n            placeholder='Write something...'\r\n            onChange={e => setBody(e)}\r\n            value={body}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nlet container = [\r\n   [{ 'font': [] }],\r\n   ['bold', 'italic', 'underline', 'strike'],\r\n   ['blockquote', 'code-block', 'link'],\r\n   [{ 'color': [] }, { 'background': [] }],\r\n   [{ 'script': 'sub' }, { 'script': 'super' }]\r\n]\r\n\r\nexport default LiteQuill","import React, { useState, useRef, useEffect } from 'react'\r\nimport LiteQuill from '../editor/LiteQuill'\r\nimport { IComment } from '../../utils/TypeScript'\r\n\r\ninterface IProps {\r\n   callback: (body: string) => void\r\n   edit?: IComment\r\n   setEdit?: (edit?: IComment) => void\r\n}\r\nconst Input = ({ callback, edit, setEdit } : IProps) => {\r\n   const [body, setBody] = useState('')\r\n   const divRef = useRef<HTMLDivElement>(null)\r\n\r\n   useEffect(() => {\r\n      if(!edit) return;\r\n      setBody(edit.content)\r\n   }, [edit])\r\n\r\n   const handleSubmit = () => {\r\n      const div = divRef.current;\r\n      const text= (div?.innerText as string)\r\n      if(!text.trim()) {\r\n         if(setEdit) return setEdit(undefined);\r\n         return;\r\n      }\r\n\r\n      callback(body)\r\n      setBody('');\r\n   }\r\n   return (\r\n      <div >\r\n         <LiteQuill body={body} setBody={setBody} />\r\n\r\n         <div ref={divRef} dangerouslySetInnerHTML={{\r\n            __html: body\r\n         }} style={{display: 'none'}}></div>\r\n\r\n         <button className='btn btn-dark ms-auto d-block px-4 mt-2' onClick={handleSubmit}>\r\n            { edit ? 'Update' : 'Send' }\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Input","import { Dispatch } from \"react\";\r\nimport { ALERT, IAlertType } from \"../types/alertType\";\r\nimport { IComment } from \"../../utils/TypeScript\";\r\nimport { postApi, getApi, patchApi, delApi } from \"../../utils/FetchData\";\r\nimport { CREATE_COMMENT, GET_COMMENTS, \r\n   REPLY_COMMENT, UPDATE_COMMENT, \r\n   UPDATE_REPLY,  DELETE_COMMENT,\r\n   DELETE_REPLY,\r\n   ICommentType\r\n} from \"../types/commentType\";\r\nimport { checkTokenExp } from \"../../utils/checkTokenExp\";\r\n\r\nexport const createComment = (data: IComment, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | ICommentType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         const res = await postApi('comment', data, access_token);\r\n         \r\n         // dispatch({\r\n         //    type: CREATE_COMMENT,\r\n         //    payload: {...res.data, user: data.user}\r\n         // })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: {\r\n               errors: err.message\r\n            }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const getComments = (id: string, num: number) => {\r\n   return async (dispatch: Dispatch<IAlertType | ICommentType>) => {\r\n      try {\r\n         let limit = 4;\r\n         const res = await getApi(`comments/blog/${id}?limit=${limit}&page=${num}`);\r\n         \r\n         dispatch({\r\n            type :GET_COMMENTS,\r\n            payload: {\r\n               data: res.data.comments,\r\n               total: res.data.total\r\n            }\r\n         })\r\n         \r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const replyComment = (data: IComment, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | ICommentType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         const res = await postApi('reply_comment', data, access_token);\r\n         // dispatch({\r\n         //    type: REPLY_COMMENT,\r\n         //    payload: {\r\n         //       ...res.data,\r\n         //       user: data.user,\r\n         //       reply_user: data.reply_user\r\n         //    }\r\n         // })\r\n         \r\n      } catch(err: any) {\r\n         dispatch({\r\n            type :ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const updateComment = (data: IComment, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | ICommentType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         // dispatch({\r\n         //    type :data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT,\r\n         //    payload: data\r\n         // })\r\n\r\n         await patchApi(`comment/${data._id}`, { data }, access_token);\r\n         \r\n         \r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const deleteCommnet = (data: IComment, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | ICommentType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         // dispatch({\r\n         //    type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT,\r\n         //    payload: data\r\n         // })\r\n\r\n         await delApi(`comment/${data._id}`, access_token);\r\n         \r\n      } catch(err : any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}","import React, { useState } from 'react'\r\nimport { IComment } from '../../utils/TypeScript'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore } from '../../utils/TypeScript'\r\nimport Input from './Input'\r\nimport { replyComment, updateComment, deleteCommnet } from '../../redux/action/commentAction'\r\ninterface IProps {\r\n   comment: IComment\r\n}\r\nconst CommentList: React.FC<IProps> = ({ comment, children }) => {\r\n   const [onReply, setOnReply] = useState(false)\r\n   const [edit, setEdit] = useState<IComment>()\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n   const dispatch = useDispatch();\r\n\r\n   const handleReply = (body: string) => {\r\n      if (!auth.user || !auth.access_token) {\r\n         alert('Please, Login to comment.')\r\n         setOnReply(false)\r\n         return;\r\n      }\r\n\r\n      const data = {\r\n         user: auth.user,\r\n         content: body,\r\n         blog_id: comment.blog_id,\r\n         blog_user_id: comment.blog_user_id,\r\n         reply_user: comment.user,\r\n         replyCM: [],\r\n         comment_root: comment.comment_root || comment._id,\r\n         createdAt: new Date().toISOString()\r\n      }\r\n      dispatch(replyComment(data, auth.access_token))\r\n      setOnReply(false)\r\n   }\r\n\r\n   const handleUpdate = (body: string) => {\r\n      if (!auth.user || !auth.access_token) return;\r\n\r\n      if(body === edit?.content) return setEdit(undefined)\r\n      \r\n      const newComment = {...edit, content: body}\r\n      \r\n      dispatch(updateComment(newComment as IComment, auth.access_token))\r\n      setEdit(undefined)\r\n   }\r\n\r\n   const handleDelete = (comment: IComment) => {\r\n      if(!auth.user || !auth.access_token) return;\r\n\r\n      dispatch(deleteCommnet(comment, auth.access_token))      \r\n   }\r\n\r\n   const Nav = (comment: IComment) => {\r\n      return (\r\n         <div>\r\n            <i className='fas fa-trash-alt mx-2' \r\n               onClick={() => handleDelete(comment)}\r\n            />\r\n            <i className='fas fa-edit mx-2'\r\n               onClick={() => setEdit(comment)}\r\n            />\r\n         </div>\r\n      )\r\n   }\r\n\r\n   return (\r\n      <div className='w-100'>\r\n         {\r\n            edit ?\r\n               <Input\r\n                  callback={handleUpdate}\r\n                  edit={edit}\r\n                  setEdit={setEdit}\r\n               />\r\n               :\r\n               <div className=\"comment_box\">\r\n                  <div className='p-2' dangerouslySetInnerHTML={{\r\n                     __html: comment.content\r\n                  }}>\r\n                  </div>\r\n\r\n                  <div className='d-flex justify-content-between p-2'>\r\n                     <small style={{ cursor: 'pointer', opacity: '0.8', color: 'blue' }} onClick={() => setOnReply(!onReply)}>\r\n                        {onReply ? '- Cancel -' : '- Reply -'}\r\n                     </small>\r\n\r\n                     <small className='d-flex'>\r\n                        <div className='comment_nav'>\r\n                           {\r\n                              // if you is the author of the blog, you can delete the comment\r\n                              // if you is the author of the comment, you can delete and edit the comment\r\n                              // if you is the author of the comment and blog, you can delete and edit the comment\r\n                              comment.blog_user_id === auth.user?._id ?\r\n                                 comment.user._id === auth.user._id ?\r\n                                    Nav(comment)\r\n                                    :\r\n                                    <i className='fas fa-trash-alt mx-2' \r\n                                       onClick={() => handleDelete(comment)}\r\n                                    />\r\n                                 :\r\n                                 // if you not is the author of the blog and comment, you cann't delete and edit the comment\r\n                                 comment.user._id === auth.user?._id && Nav(comment)\r\n                           }\r\n                        </div>\r\n                        <div>\r\n                           {new Date(comment.createdAt).toLocaleString()}\r\n                        </div>\r\n                     </small>\r\n                  </div>\r\n               </div>\r\n         }\r\n\r\n         {\r\n            onReply && <Input callback={handleReply} />\r\n         }\r\n\r\n         {children}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CommentList","import React from 'react'\r\nimport { IUser } from '../../utils/TypeScript'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n   user: IUser,\r\n   reply_user?: IUser\r\n}\r\nconst AvatarReply = ({ user, reply_user }: IProps) => {\r\n\r\n   return (\r\n      <div className='avatar_reply'>\r\n         <img src={user.avatar} alt=\"Avatar\" />\r\n\r\n         <div className='ms-1'>  \r\n            <small className='text-muted d-block text-break'>\r\n               <Link to={`/profile/${user._id}`}>\r\n                  {user.name}\r\n               </Link>\r\n            </small>\r\n\r\n            <small className='text-muted d-block text-break'>\r\n               Reply to <Link to={`/profile/${reply_user?._id}`}>\r\n                  {reply_user?.name}\r\n               </Link>\r\n            </small>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default AvatarReply","import React, { useState, useEffect } from 'react'\r\nimport { IComment } from '../../utils/TypeScript'\r\nimport AvatarComment from './AvatarComment'\r\nimport CommentList from './CommentList'\r\nimport AvatarReply from './AvatarReply'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootStore } from '../../utils/TypeScript'\r\ninterface IProps {\r\n   comment: IComment\r\n}\r\nconst Comments = ({ comment }: IProps) => {\r\n   const [showReply, setShowReply] = useState<IComment[]>([])\r\n   const [next, setNext] = useState(2)\r\n   useEffect(() => {\r\n      if(!comment.replyCM) return;\r\n      setShowReply(comment.replyCM)\r\n   }, [comment.replyCM])\r\n   return (\r\n      <div className='my-3 d-flex' style={{\r\n         opacity: comment._id ? 1 : 0.5,\r\n         pointerEvents: comment._id ? 'initial' : 'none'\r\n      }}>\r\n         <AvatarComment user={comment.user} />\r\n\r\n         <CommentList\r\n            comment={comment}\r\n         >\r\n            {\r\n               showReply.slice(0, next).map(reply => (\r\n                  <div key={reply._id} style={{\r\n                     opacity: reply._id ? 1 : 0.5,\r\n                     pointerEvents: reply._id ? 'initial' : 'none'\r\n                  }}>\r\n                     <AvatarReply\r\n                        user={reply.user}\r\n                        reply_user={reply.reply_user}\r\n                     />\r\n                     <CommentList\r\n                        comment={reply}\r\n                     />\r\n                  </div>\r\n               ))\r\n            }\r\n\r\n            <div style={{ cursor: 'pointer'}}>\r\n               {\r\n                  showReply.length - next > 0 ?\r\n                  <small style={{ color: 'crimson'}} onClick={() => setNext(Number(showReply.length))}>\r\n                     See more comments\r\n                  </small>\r\n                  : showReply.length > 2 &&\r\n                  <small style={{ color: 'teal'}} onClick={() => setNext(2)}>\r\n                     Hide comments\r\n                  </small>\r\n               }\r\n            </div>\r\n         </CommentList>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Comments","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport Comments from '../comments/Comments'\r\nimport Input from '../comments/Input'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootStore, IUser, IComment } from '../../utils/TypeScript' \r\nimport { createComment, getComments } from '../../redux/action/commentAction'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Loading from '../alert/Loading'\r\nimport Pagination from '../Global/Pagination'\r\ninterface IProps {\r\n   blog: IBlog\r\n}\r\nconst DisplayBlog = ({ blog }: IProps) => {\r\n   const { auth, comments } = useSelector((state: RootStore) => state)\r\n   const dispatch = useDispatch();\r\n   const history = useHistory()\r\n   const [showComments, setShowComments] = useState<IComment[]>([])\r\n   const [loading, setLoading] = useState(false)\r\n   \r\n   const handleComment = (body: string) => {\r\n      if(!auth || !auth.user || !auth.access_token) return;\r\n\r\n      const data = {\r\n         content: body,\r\n         user: auth.user,\r\n         blog_id: (blog._id as string),\r\n         replyCM: [],\r\n         blog_user_id: (blog.user as IUser)._id,\r\n         createdAt: new Date().toISOString()\r\n      }\r\n      dispatch(createComment(data, auth.access_token))   \r\n   }\r\n\r\n   useEffect(() => {\r\n      if(!comments) return;\r\n      setShowComments(comments.data)\r\n   }, [comments.data])\r\n\r\n\r\n   const fetchComments = useCallback(async(id: string, num: number = 1) => {\r\n      setLoading(true)\r\n      await dispatch(getComments(id, num))\r\n      setLoading(false)\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n      if(!blog._id) return;\r\n         const num = Number(history.location.search.slice(6)) || 1;\r\n      fetchComments(blog._id, num);\r\n   }, [blog._id])\r\n\r\n   const handlePagination = (page: number) => {\r\n      if(!blog._id) return;\r\n      fetchComments(blog._id, page)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <h2 className='text-center my-3 text-capitalize' style={{ color: '#ff7a00'}}>\r\n            {blog.title}\r\n         </h2>\r\n\r\n         <div className='text-end my-3' style={{ color: 'teal'}}>\r\n            <small>\r\n               {\r\n                  typeof(blog.user) !== 'string' &&\r\n                  `By: ${blog.user.name}`\r\n               }\r\n            </small>\r\n\r\n            <small className='ms-2'>\r\n               {new Date(blog.createdAt).toLocaleString()}\r\n            </small>\r\n         </div>\r\n\r\n         <div className='text-center blog' dangerouslySetInnerHTML={{\r\n            __html: blog.content\r\n         }}>\r\n         </div>\r\n            <hr className='my-1' />\r\n            <h3 style={{ color: '#ff7a00'}}> Comments </h3>\r\n            {\r\n               auth.user ? \r\n               <Input callback={handleComment} />\r\n               : \r\n               <h5> Please <Link to={`/login?blog/${blog._id}`}>login</Link> to comment.</h5>\r\n            }\r\n\r\n            {\r\n               loading ? \r\n               <Loading />\r\n               :\r\n               showComments && showComments.length > 0 &&\r\n               showComments.map((comment) => (\r\n                  <Comments key={comment._id} comment={comment} />\r\n               ))\r\n            }\r\n\r\n            {\r\n               comments.total > 1 &&\r\n               <Pagination \r\n                  total={comments.total}\r\n                  callback={handlePagination}\r\n               />\r\n            }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DisplayBlog","import React,{ useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams, IBlog, RootStore } from '../../utils/TypeScript'\r\nimport { getApi } from '../../utils/FetchData'\r\nimport Loading from '../../components/alert/Loading'\r\nimport { showErrMsg } from '../../components/alert/Alert'\r\nimport DisplayBlog from '../../components/blog/DisplayBlog'\r\nimport { useSelector } from 'react-redux'\r\nconst DetailBlog = () => {\r\n   const blog_id = useParams<IParams>().slug;\r\n   const { socket } = useSelector((state: RootStore) => state)\r\n   const [blog, setBlog] = useState<IBlog>();\r\n   const [loading, setLoadig] = useState(false);\r\n   const [error, setError] = useState('');\r\n\r\n   \r\n\r\n   useEffect(() => {\r\n      if(!blog_id) return;\r\n      setLoadig(true);\r\n      getApi(`/blog/${blog_id}`)\r\n         .then(res => {\r\n            setBlog(res.data)\r\n            setLoadig(false);\r\n         })\r\n         .catch(err => {\r\n            setError('Cannot get blog detail');\r\n            setLoadig(false);\r\n         })\r\n\r\n      return () => {\r\n         setBlog(undefined);\r\n      }\r\n   }, [blog_id])\r\n\r\n   useEffect(() => {\r\n      if(!blog_id || !socket) return;\r\n      socket.emit('joinRoom', blog_id)\r\n\r\n      return () => {\r\n         socket.emit('leaveRoom', blog_id)\r\n      }\r\n   }, [socket, blog_id])\r\n\r\n   if(loading) return <Loading />\r\n   return (\r\n      <div>\r\n         { error && showErrMsg(error) }\r\n         \r\n         { blog && <DisplayBlog blog={blog} /> }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default DetailBlog","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { InputChange, FormSubmit } from '../../utils/TypeScript';\r\nimport { login } from '../../redux/action/authAction';\r\nconst LoginPass = () => {\r\n   const dispatch = useDispatch();\r\n   const initState = { account: '', password: '' };\r\n   const [userLogin, setUserLogin] = useState(initState);\r\n   const { account, password } = userLogin;\r\n   const [typePass, setTypePass] = useState(false);\r\n   const handleChangeInput = (e: InputChange) => {\r\n      const { value, name } = e.target;\r\n      setUserLogin({ ...userLogin, [name]: value });\r\n   }\r\n\r\n   const handleSubmitForm = (e: FormSubmit) => {\r\n      e.preventDefault();      \r\n      dispatch(login(userLogin))\r\n   }\r\n   return (\r\n      <form onSubmit={handleSubmitForm}>\r\n         <div className=\"form-group mb-2\">\r\n            <label className='form-label' htmlFor=\"account\">Email/ Phone number</label>\r\n            <input type=\"text\"\r\n               className='form-control'\r\n               name='account' id='account'\r\n               value={account}\r\n               onChange={handleChangeInput}\r\n            />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <label className='form-label' htmlFor=\"password\">Password</label>\r\n            <div className=\"pass\">\r\n               <input type={typePass ? 'text' : 'password'}\r\n                  className='form-control'\r\n                  name='password' id='password'\r\n                  value={password}\r\n                  onChange={handleChangeInput}\r\n               />\r\n               <small\r\n                  onClick={() => setTypePass(!typePass)}>\r\n                  {typePass ? 'hide' : 'show'}\r\n               </small>\r\n            </div>\r\n         </div>\r\n\r\n         <button\r\n            disabled={(account && password) ? false : true}\r\n            className='btn btn-dark w-100 mt-4' type='submit' >\r\n            Login\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default LoginPass","import React, { useState } from 'react'\r\nimport { FormSubmit } from '../../utils/TypeScript'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginSms } from '../../redux/action/authAction'\r\nconst LoginSms = () => {\r\n   const [phone, setPhone] = useState('')\r\n   const dispatch = useDispatch();\r\n   const handleSubmit = (e: FormSubmit) => {\r\n      e.preventDefault()\r\n      dispatch(loginSms(phone))\r\n   }\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"phone\" className='form-label'>Phone number</label>\r\n            <input type=\"text\" \r\n            className='form-control' \r\n            id='phone' name='phone'\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            placeholder='+84123456789'\r\n            />\r\n         </div>\r\n         <button className='btn btn-dark w-100' disabled={phone ? false : true}>\r\n            Login\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default LoginSms","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { GoogleLoginResponse, GoogleLogin } from 'react-google-login-lite';\r\nimport { facebookLogin, googlelogin } from '../../redux/action/authAction';\r\nimport { FacebookLogin, FacebookLoginAuthResponse } from 'react-facebook-login-lite';\r\nconst SocialLogin = () => {\r\n   const dispatch = useDispatch();\r\n   // Google\r\n   const onSuccess = (googleUser: GoogleLoginResponse) => {\r\n      const id_token = googleUser.getAuthResponse().id_token;\r\n      dispatch(googlelogin(id_token));\r\n   }\r\n\r\n   // Facebook\r\n   const onFbSuccess = (response: FacebookLoginAuthResponse) => {\r\n      const { accessToken, userID } = response.authResponse\r\n      dispatch(facebookLogin(accessToken, userID));\r\n   }\r\n\r\n   return (\r\n      <div className='my-2'>\r\n         <GoogleLogin\r\n            client_id='700427633806-ut7c8e5d2377r9q9o1ev5eu3kak37fhs.apps.googleusercontent.com'\r\n            cookiepolicy='single_host_origin'\r\n            onSuccess={onSuccess}\r\n         />\r\n         <FacebookLogin\r\n            appId=\"549602096794210\"\r\n            onSuccess={onFbSuccess}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SocialLogin","import React, { useState, useEffect } from 'react'\r\nimport LoginPass from '../components/Auth/LoginPass'\r\nimport LoginSms from '../components/Auth/LoginSms'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootStore } from '../utils/TypeScript'\r\nimport SocialLogin from '../components/Auth/SocialLogin'\r\nconst Login = () => {\r\n   const [sms, setSms] = useState(false)\r\n   const history = useHistory()\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n\r\n   useEffect(() => {\r\n      if (auth.access_token) {\r\n         let url = history.location.search.replace('?', '/');\r\n         return history.push(url)\r\n      }\r\n   }, [auth.access_token, history])\r\n\r\n   return (\r\n      <div className=\"auth_page\">\r\n         <div className=\"auth_box\">\r\n            <h3 className=\"text-uppercase text-center mb-4\">Login</h3>\r\n               <SocialLogin />\r\n            {sms ? <LoginSms /> : <LoginPass />}\r\n\r\n            <small className=\"row my-2 text-primary\" style={{ cursor: 'pointer' }}>\r\n               <span className=\"col-6\">\r\n                  <Link to='/forgot_password'>\r\n                     Forgot password?\r\n                  </Link>\r\n               </span>\r\n\r\n               <span className=\"col-6 text-end\" onClick={() => setSms(!sms)}>\r\n                  {sms ? 'Sign in with password' : 'Sign in with SMS'}\r\n               </span>\r\n            </small>\r\n\r\n            <p>\r\n               {`You don't have an account? `}\r\n               <Link to={`/register${history.location.search}`} style={{ color: 'crimson' }}>\r\n                  Register Now\r\n               </Link>\r\n            </p>\r\n\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Login","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useDispatch } from 'react-redux'\r\nimport { FormSubmit, InputChange, IUserProfile, RootStore } from '../../utils/TypeScript'\r\nimport NotFound from '../Global/NotFound'\r\nimport { updateUser, resetPassword } from '../../redux/action/profileActions'\r\n\r\n\r\n\r\nconst UserInfor = () => {\r\n   const dispatch = useDispatch()\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n   const initState = {\r\n      name: '', account: '', avatar: '', password: '', cf_password: ''\r\n   }\r\n   const [user, setUser] = useState<IUserProfile>(initState);\r\n   const [typePass, setTypePass] = useState(false);\r\n   const [typeCfPass, setTypeCfPass] = useState(false);\r\n\r\n   const handleChangeInput = (event: InputChange) => {\r\n      const { name, value } = event.target;    \r\n      setUser({ ...user, [name]: value })\r\n   }\r\n\r\n   const handleChangeFile = (event : InputChange) => {\r\n      const target = event.target as HTMLInputElement;\r\n      const files = target.files\r\n      if(files) {\r\n         const file = files[0];\r\n         setUser({...user, avatar: file})\r\n      }\r\n   }\r\n   const { name, account, avatar, password, cf_password } = user;\r\n\r\n   const handleSubmit = (e: FormSubmit) => {\r\n      e.preventDefault();      \r\n      if(avatar || name) {         \r\n         dispatch(updateUser((avatar as File), name, auth))\r\n      }\r\n\r\n      if(password && auth.access_token) {\r\n         dispatch(resetPassword(password, cf_password, auth.access_token))\r\n      }\r\n   }\r\n   if(!auth.user) return <NotFound />;\r\n   return (\r\n      <form className=\"profile_info\" onSubmit={handleSubmit}>\r\n         <div className=\"info_avatar\">\r\n            <img src={avatar ? URL.createObjectURL((avatar as File)) : auth.user.avatar}\r\n               alt=\"avatar\"\r\n            />\r\n            <span>\r\n               <i className='fas fa-camera'></i>\r\n               <p>Change Image</p>\r\n               <input\r\n                  type=\"file\"\r\n                  accept='image/*'\r\n                  name='file'\r\n                  id='file_up'\r\n                  onChange={handleChangeFile}\r\n               />\r\n            </span>\r\n         </div>\r\n\r\n         <div className=\"form-group my-3\">\r\n            <label htmlFor=\"name\" className='form-label'>Name</label>\r\n            <input\r\n               type=\"text\"\r\n               className='form-control'\r\n               name='name'\r\n               id='name'\r\n               onChange={handleChangeInput}\r\n               defaultValue={auth.user.name}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"form-group my-3\">\r\n            <label htmlFor=\"account\">Account</label>\r\n            <input\r\n               type=\"text\"\r\n               className='form-control'\r\n               name='account'\r\n               id='account'\r\n               defaultValue={auth.user.account}\r\n               disabled={true}\r\n            />\r\n         </div>\r\n\r\n         {\r\n            auth.user.type !== 'register' &&\r\n            <small className='text-danger'>\r\n               * Quick login account with {auth.user.type} can't use this function *\r\n            </small>\r\n         }\r\n\r\n         <div className=\"form-group my-3\">\r\n            <label className='form-label' htmlFor=\"password\">Password</label>\r\n            <div className=\"pass\">\r\n               <input type={typePass ? 'text' : 'password'}\r\n                  className='form-control'\r\n                  name='password' id='password'\r\n                  value={password}\r\n                  onChange={handleChangeInput}\r\n                  disabled={auth.user.type !== 'register' ? true : false}\r\n               />\r\n               <small\r\n                  onClick={() => setTypePass(!typePass)}>\r\n                  {typePass ? 'hide' : 'show'}\r\n               </small>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"form-group my-3\">\r\n            <label className='form-label' htmlFor=\"cf_password\">Confirm password</label>\r\n            <div className=\"pass\">\r\n               <input type={typeCfPass ? 'text' : 'password'}\r\n                  className='form-control'\r\n                  name='cf_password' id='cf_password'\r\n                  value={cf_password}\r\n                  onChange={handleChangeInput}\r\n                  disabled={auth.user.type !== 'register' ? true : false}\r\n               />\r\n               <small\r\n                  onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                  {typeCfPass ? 'hide' : 'show'}\r\n               </small>\r\n            </div>\r\n         </div>\r\n\r\n         <button className='btn btn-dark w-100' type='submit'>\r\n            Update\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default UserInfor","import React, { useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { getOtherInfo } from '../../redux/action/profileActions' \r\nimport { RootStore, IUser  } from '../../utils/TypeScript'\r\nimport Loading from '../alert/Loading'\r\nimport { showErrMsg } from '../alert/Alert'\r\ninterface IProps  {\r\n   id: string\r\n}\r\n\r\nconst OrtherInfor = ({ id }: IProps) => {\r\n   const dispatch = useDispatch();\r\n   const { otherInfo } = useSelector((state: RootStore) => state)\r\n\r\n   const [other, setOther] = useState<IUser>()\r\n\r\n   useEffect(() => {\r\n      if(!id) return;\r\n\r\n      if(otherInfo.every(item => item._id !== id)) {\r\n         dispatch(getOtherInfo(id))\r\n      } else {\r\n         const newUser = otherInfo.find(item => item._id === id)\r\n         if(newUser) setOther(newUser)\r\n      }\r\n\r\n   }, [id, dispatch, otherInfo])\r\n\r\n   if(!other) return <Loading />\r\n   return (\r\n      <div className=\"profile_info text-center rounded\">\r\n         <div className=\"info_avatar\">\r\n            <img src={other.avatar} alt=\"\" />\r\n         </div>\r\n\r\n         <h5 className='text-uppercase text-danger'>\r\n            {other.role}\r\n         </h5>\r\n\r\n         <div>\r\n            Name: <span className='text-info'>{other.name}</span>\r\n         </div>\r\n         <div>\r\n            Email / Phone number: <span className='text-info'>{other.account}</span>\r\n         </div>\r\n         <div>\r\n            Join Date: <span style={{ color: '#ffc107'}}>{new Date(other.createdAt).toLocaleString()}</span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default OrtherInfor","import React,  { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { IParams, RootStore } from '../../utils/TypeScript'\r\nimport { getBlogsByUser } from '../../redux/action/blogAction'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport Loading from '../Global/Loading'\r\nimport CardHoriz from '../cards/CardHoriz'\r\nimport Pagination from '../Global/Pagination' \r\nimport { showErrMsg } from '../alert/Alert'\r\nconst Userblog = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { blogUser } = useSelector((state: RootStore) => state);\r\n  const user_id = useParams<IParams>().slug;\r\n    \r\n  const [blogs, setBlogs] = useState<IBlog[]>();\r\n  const [total, setTotal] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    if(!user_id) return;\r\n    \r\n    if(blogUser.every(item => item.id !== user_id)) {\r\n      if(history.location.search) {        \r\n        dispatch(getBlogsByUser(user_id, history.location.search));\r\n      }   else {\r\n        dispatch(getBlogsByUser(user_id));\r\n      }   \r\n    } else {       \r\n      const data = blogUser.find(item => item.id === user_id);\r\n      if(!data) return;      \r\n      setBlogs(data.blogs);\r\n      setTotal(data.total);\r\n\r\n      if(data.search) history.push(data.search);\r\n      return () => {\r\n        setBlogs([]);\r\n        setTotal(0);\r\n      }\r\n    }\r\n  }, [user_id, dispatch, blogUser])\r\n\r\n  const handlePagination = (page: number) => {\r\n    const search = `?page=${page}`;\r\n    dispatch(getBlogsByUser(user_id, search));\r\n  }\r\n\r\n  if(!blogs) return <Loading />;\r\n\r\n  if(blogs.length === 0) return <h3 className='text-center'>No Blogs</h3>\r\n  return (\r\n    <div>\r\n      <div>\r\n        {\r\n          blogs.length > 0 && \r\n          blogs.map(blog => (\r\n            <CardHoriz key={blog._id} blog={blog} />\r\n          ))\r\n        }\r\n      </div>\r\n      {\r\n        total > 1 &&\r\n      <Pagination \r\n        total={total}\r\n        callback={handlePagination}\r\n      />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Userblog","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from '../../utils/TypeScript';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootStore } from '../../utils/TypeScript'\r\nimport UserInfor from '../../components/profile/UserInfor';\r\nimport OrtherInfor from '../../components/profile/OrtherInfor';\r\nimport UserBlog from '../../components/profile/UserBlog';\r\nconst Profile = () => {\r\n   const { slug }: IParams = useParams();\r\n   const { auth } = useSelector((state: any) => state);\r\n   return (\r\n      <div className=\"row my-2\">\r\n         <div className=\"col-md-5 mb-3\">\r\n            {\r\n               auth.user?._id === slug ?\r\n               <UserInfor />\r\n               :\r\n               <OrtherInfor id={slug} />\r\n            }\r\n         </div>\r\n         <div className=\"col-md-7\">\r\n            <UserBlog />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { InputChange, FormSubmit } from '../../utils/TypeScript';\r\nimport { register } from '../../redux/action/authAction';\r\nconst RegisterForm = () => {\r\n   const dispatch = useDispatch();\r\n   const initState = { name: '',  account: '', password: '', cf_password: '' };\r\n   const [userRegister, setUserRegister] = useState(initState);\r\n   const { name,  account, password, cf_password } = userRegister;\r\n   const [typePass, setTypePass] = useState(false);\r\n   const [typeCfPass, setTypeCfPass] = useState(false);\r\n   const handleChangeInput = (e: InputChange) => {\r\n      const { value, name } = e.target;\r\n      setUserRegister({ ...userRegister, [name]: value });\r\n   }\r\n\r\n   const handleSubmitForm = (e: FormSubmit) => {\r\n      e.preventDefault();      \r\n      dispatch(register(userRegister))\r\n   }\r\n   return (\r\n      <form onSubmit={handleSubmitForm}>\r\n         <div className=\"form-group mb-2\">\r\n            <label className='form-label' htmlFor=\"name\">Name</label>\r\n            <input type=\"text\"\r\n               className='form-control'\r\n               name='name' id='name'\r\n               value={name}\r\n               onChange={handleChangeInput}\r\n            />\r\n         </div>\r\n         <div className=\"form-group mb-2\">\r\n            <label className='form-label' htmlFor=\"account\">Email/ Phone number</label>\r\n            <input type=\"text\"\r\n               className='form-control'\r\n               name='account' id='account'\r\n               value={account}\r\n               onChange={handleChangeInput}\r\n            />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <label className='form-label' htmlFor=\"password\">Password</label>\r\n            <div className=\"pass\">\r\n               <input type={typePass ? 'text' : 'password'}\r\n                  className='form-control'\r\n                  name='password' id='password'\r\n                  value={password}\r\n                  onChange={handleChangeInput}\r\n               />\r\n               <small\r\n                  onClick={() => setTypePass(!typePass)}>\r\n                  {typePass ? 'hide' : 'show'}\r\n               </small>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <label className='form-label' htmlFor=\"cf_password\">Confirm password</label>\r\n            <div className=\"pass\">\r\n               <input type={typeCfPass ? 'text' : 'password'}\r\n                  className='form-control'\r\n                  name='cf_password' id='cf_password'\r\n                  value={cf_password}\r\n                  onChange={handleChangeInput}\r\n               />\r\n               <small\r\n                  onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                  {typeCfPass ? 'hide' : 'show'}\r\n               </small>\r\n            </div>\r\n         </div>\r\n\r\n         <button className='btn btn-dark w-100 my-4' type='submit' >\r\n            Register\r\n         </button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default RegisterForm","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport RegisterForm from '../components/Auth/RegisterForm';\r\nimport { useHistory } from 'react-router-dom';\r\nconst Register = ()=> {\r\n   const history = useHistory();\r\n   return (\r\n      <div className=\"auth_page\">\r\n         <div className=\"auth_box\">\r\n            <h3 className=\"text-uppercase text-center mb-4 mt-2\">Register</h3>\r\n            <RegisterForm />\r\n            <p className='text-center'>\r\n               Already have an account ?\r\n               <Link to={`/login${history.location.search}`} style={{ color: 'crimson' }}>\r\n                  {` Login Now!`}\r\n               </Link>\r\n            </p>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Register","var map = {\n\t\"./\": 79,\n\t\"./active/[slug]\": 96,\n\t\"./active/[slug].tsx\": 96,\n\t\"./blog/[slug]\": 147,\n\t\"./blog/[slug].tsx\": 147,\n\t\"./blogs/[slug]\": 127,\n\t\"./blogs/[slug].tsx\": 127,\n\t\"./category\": 128,\n\t\"./category.tsx\": 128,\n\t\"./create_blog\": 72,\n\t\"./create_blog.tsx\": 72,\n\t\"./forgot_password\": 129,\n\t\"./forgot_password.tsx\": 129,\n\t\"./index\": 79,\n\t\"./index.tsx\": 79,\n\t\"./login\": 148,\n\t\"./login.tsx\": 148,\n\t\"./profile/[slug]\": 149,\n\t\"./profile/[slug].tsx\": 149,\n\t\"./register\": 150,\n\t\"./register.tsx\": 150,\n\t\"./reset_password/[slug]\": 130,\n\t\"./reset_password/[slug].tsx\": 130,\n\t\"./update_blog/[slug]\": 131,\n\t\"./update_blog/[slug].tsx\": 131\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 165;","import { IBlog } from '../../utils/TypeScript'\r\nimport { Dispatch } from 'react'\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\nimport { imageUpload } from '../../utils/ImageUpload'\r\nimport { postApi, getApi, putApi, delApi } from '../../utils/FetchData'\r\nimport { GET_HOME_BLOG, IGetHomeBlogsType, \r\n   GET_BLOG_BY_CATEGORY_ID, IGetBlogsByCategoryIdType\r\n   ,GET_BLOGS_USER_ID, IBlogUserType,\r\n   CREATE_BLOG_USER_ID, DELETE_BLOG_USER_ID\r\n} from '../types/blogType'\r\n\r\nimport { checkTokenExp } from '../../utils/checkTokenExp';\r\n\r\n\r\nexport const createBlog = (blog: IBlog, token: string) => {\r\n   return async (dispatch: Dispatch<IAlertType | IBlogUserType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n         let url: string = ''\r\n         if(typeof blog.thumbnail !== 'string') {\r\n            const photo = await imageUpload(blog.thumbnail)\r\n            url  = photo.url\r\n         }\r\n         else {\r\n            url = blog.thumbnail\r\n         }\r\n         const newBlog = {...blog, thumbnail: url}\r\n         const res = await postApi('blog', newBlog, access_token)\r\n         dispatch({\r\n            type: CREATE_BLOG_USER_ID,\r\n            payload: res.data\r\n         })\r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const getHomeBlogs = () => {\r\n   return async (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n         const res = await getApi('home/blogs');\r\n\r\n         dispatch({\r\n            type: GET_HOME_BLOG,\r\n            payload: res.data\r\n         })\r\n         \r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const getBlogsByCategoryId = (categoryId: string, search: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | IGetBlogsByCategoryIdType>) => {\r\n      try {\r\n         let limit  = 8;\r\n         let value = search ? search : `?page=${1}`\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n         \r\n         const res  = await getApi(`blogs/category/${categoryId}${value}&limit=${limit}`);\r\n         console.log(res)\r\n         dispatch({\r\n            type: GET_BLOG_BY_CATEGORY_ID,\r\n            payload: {...res.data, id: categoryId, search}\r\n         })\r\n\r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const getBlogsByUser = (id: string, search?: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | IBlogUserType>) => {\r\n      try {\r\n         let limit = 3;\r\n         let value = search ? search : `?page=${1}`\r\n         \r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n\r\n         const res = await getApi(`blogs/user/${id}${value}&limit=${limit}`);\r\n\r\n         dispatch({\r\n            type: GET_BLOGS_USER_ID,\r\n            payload: {...res.data, id, search}\r\n         })\r\n         \r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const updateBlog = (blog: IBlog, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n         let url: string = ''\r\n         if(typeof blog.thumbnail !== 'string') {\r\n            const photo = await imageUpload(blog.thumbnail)\r\n            url  = photo.url\r\n         }\r\n         else {\r\n            url = blog.thumbnail\r\n         }\r\n         const newBlog = {...blog, thumbnail: url}\r\n         \r\n         const res = await putApi(`blog/${newBlog._id}`, newBlog, access_token)\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: res.data.msg}\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const deleteBlog = (blog: IBlog, token: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | IBlogUserType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n\r\n         await delApi(`blog/${blog._id}`, access_token)\r\n         dispatch({\r\n            type: DELETE_BLOG_USER_ID,\r\n            payload: blog\r\n         })\r\n\r\n         dispatch({\r\n            type :ALERT,\r\n            payload: { }\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message}\r\n         })\r\n      }\r\n   }\r\n}","import { IBlog } from \"../../utils/TypeScript\";\r\n\r\nexport const GET_HOME_BLOG = 'GET_HOME_BLOG';\r\nexport const GET_BLOG_BY_CATEGORY_ID = 'GET_BLOG_BY_CATEGORY_ID';\r\nexport const GET_BLOGS_USER_ID = 'GET_BLOGS_USER_ID';\r\nexport const CREATE_BLOG_USER_ID = 'CREATE_BLOG_USER_ID';\r\nexport const DELETE_BLOG_USER_ID = 'DELETE_BLOG_USER_ID';\r\n\r\n\r\n\r\nexport interface IHomeBlogs {\r\n   _id: string,\r\n   name: string, \r\n   count: number,\r\n   blogs: IBlog[]\r\n}\r\n\r\nexport interface IGetHomeBlogsType {\r\n   type: typeof GET_HOME_BLOG,\r\n   payload: IHomeBlogs[]\r\n}\r\n\r\n\r\nexport interface IBlogsCategory {\r\n   id: string,\r\n   blogs: IBlog[],\r\n   total: number,\r\n   search: string\r\n}\r\n\r\n\r\nexport interface IGetBlogsByCategoryIdType {\r\n   type: typeof GET_BLOG_BY_CATEGORY_ID,\r\n   payload: IBlogsCategory\r\n}\r\n\r\nexport interface IBlogsUser {\r\n   id: string,\r\n   blogs: IBlog[],\r\n   total: number,\r\n   search: string,\r\n}\r\n\r\nexport interface IGetBlogsByUserType {\r\n   type: typeof GET_BLOGS_USER_ID,\r\n   payload: IBlogsUser\r\n}\r\n\r\nexport interface ICreateBlogUserType {\r\n   type: typeof CREATE_BLOG_USER_ID,\r\n   payload: IBlog\r\n}\r\n\r\n\r\nexport interface IDeleteBlogUserType {\r\n   type: typeof DELETE_BLOG_USER_ID,\r\n   payload: IBlog\r\n}\r\n\r\nexport type IBlogUserType =  ICreateBlogUserType | IGetBlogsByUserType | IDeleteBlogUserType;","import { IUser } from '../../utils/TypeScript';\r\n\r\nexport const AUTH = 'AUTH'\r\n\r\nexport interface IAuth {\r\n   msg?: string\r\n   access_token?: string\r\n   user?: IUser\r\n}\r\n\r\nexport interface IAuthType {\r\n   type: typeof AUTH,\r\n   payload: {\r\n      access_token: string,\r\n      user: IUser\r\n   }\r\n}\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n   return (\r\n      <div className='position-relative'\r\n         style={{ minHeight: 'calc(100vh - 70px)' }}>\r\n         <h2 className='position-absolute text-secondary'\r\n            style={{ top: '50%', left: '50%', transform: 'translate(-50%, -50%)' }}>\r\n            404 | NotFound\r\n         </h2>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default NotFound","import { IAlert } from '../../utils/TypeScript';\r\n\r\nexport const ALERT = 'ALERT'\r\n\r\nexport interface IAlertType {\r\n   type: typeof ALERT\r\n   payload : IAlert\r\n}\r\n\r\n","import { ICategory } from './../../utils/TypeScript';\r\n\r\nexport const CREATE_CATEGORY = \"CREATE_CATEGORY\";\r\nexport const GET_CATEGORY = \"GET_CATEGORY\";\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\n\r\nexport interface ICreateCategory {\r\n   type: typeof CREATE_CATEGORY,\r\n   payload: ICategory\r\n}\r\n\r\nexport interface IGetCategory {\r\n   type: typeof GET_CATEGORY,\r\n   payload: ICategory[]\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n   type: typeof UPDATE_CATEGORY,\r\n   payload: ICategory\r\n}\r\n\r\nexport interface IDeleteCategory {\r\n   type: typeof DELETE_CATEGORY,\r\n   payload: string\r\n}\r\n\r\nexport type ICategoryType = ICreateCategory | IGetCategory | IUpdateCategory | IDeleteCategory;","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from './utils/TypeScript';\r\nimport NotFound from './components/Global/NotFound';\r\nconst generatePage = (name: string) => {\r\n   const component = () => require(`./pages/${name}`).default\r\n\r\n   try {\r\n      return React.createElement(component())\r\n   } catch (err) {\r\n      return <NotFound />;\r\n   }\r\n}\r\n\r\nconst PageRender = () => {\r\n   const { page, slug }: IParams = useParams()\r\n\r\n   let name = '';\r\n\r\n   if (page) {\r\n      name = slug ? `${page}/[slug]` : `${page}`\r\n   }\r\n\r\n   return generatePage(name)\r\n}\r\n\r\nexport default PageRender","import React, { useState, useEffect } from 'react'\r\nimport { getApi } from '../../utils/FetchData'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport CardHoriz from '../cards/CardHoriz'\r\nconst Search = () => {\r\n   const [search, setSearch] = useState('')\r\n   const [blogs, setBlogs] = useState<IBlog[]>([])\r\n   useEffect(() => {\r\n      const delayDebounce = setTimeout(async () => {\r\n         if (search.length < 2) return;\r\n         try {\r\n            const res = await getApi(`/search/blogs?title=${search}`)\r\n            if (res.data.length > 0) {\r\n               setBlogs(res.data)\r\n            }\r\n         } catch (error) {\r\n            console.log(error);\r\n         }\r\n      }, 400)\r\n\r\n\r\n      // Unmount\r\n      return () => {\r\n         clearTimeout(delayDebounce)\r\n         setBlogs([])\r\n      }\r\n\r\n   }, [search])\r\n\r\n   return (\r\n      <div className='search w-100 position-relative me-4'>\r\n         <input type=\"text\" className='form-control me-2 w-100 my-2'\r\n            value={search}\r\n            placeholder='Enter your search...'\r\n            onChange={(e) => setSearch(e.target.value)}\r\n         />\r\n\r\n         {\r\n            search.length >= 2 &&\r\n            <div className={`position-absolute ${window.innerWidth > 1024 ? 'px-4 py-2': 'px-2'} w-100 rounded`} style={{\r\n               backgroundColor: '#f5f5f5', zIndex: 100,\r\n               borderRadius: '0 0 10px 10px', \r\n               maxHeight: 'calc(100vh - 100px',\r\n               overflow: 'auto'\r\n            }}>\r\n               {\r\n                  blogs && blogs.length > 0 ?\r\n                     blogs.map(blog => (\r\n                        <CardHoriz key={blog._id} blog={blog} />\r\n                     ))\r\n                     :\r\n                     <h3 className='w-100 text-center p-4'>No blog</h3>\r\n               }\r\n            </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore } from '../../utils/TypeScript'\r\nimport { logout } from '../../redux/action/authAction'\r\nconst Menu = () => {\r\n   const dispatch = useDispatch()\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n   const bfLoginLinks = [\r\n      { label: 'Login', path: '/login' },\r\n      { label: 'Register', path: '/register' },\r\n   ]\r\n   const afLoginLinks = [\r\n      { label: 'Home', path: '/' },\r\n      { label: 'CreateBlog', path: '/create_blog' },\r\n   ]\r\n\r\n   const navLinks = auth.access_token ? afLoginLinks : bfLoginLinks\r\n\r\n   const location = useLocation();\r\n   const { pathname } = location;\r\n   const isActive = (pn: string) => {\r\n      if (pathname === pn) {\r\n         return 'active'\r\n      }\r\n   }\r\n   const handleLogout = () => {\r\n      if(!auth.access_token || !auth.user) return;\r\n\r\n      dispatch(logout(auth.access_token))\r\n   }\r\n\r\n   return (\r\n      <ul className=\"navbar-nav ms-auto\">\r\n         {\r\n            navLinks.map((link, index) => (\r\n               <li className={`nav-item ${isActive(link.path)}`} key={index}>\r\n                  <Link className=\"nav-link\" to={link.path}>{link.label}</Link>\r\n               </li>\r\n            ))\r\n         }\r\n         {\r\n            auth.user?.role === 'admin' &&\r\n            <li className={`nav-item ${isActive('/category')}`}>\r\n               <Link className='nav-link' to='/category'>\r\n                  Category\r\n               </Link>\r\n            </li>\r\n         }\r\n         {\r\n            auth.user &&\r\n            <li className=\"nav-item dropdown\">\r\n               <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                  <img src={auth.user.avatar} alt=\"avatar\" title={auth.user.name} className='avatar' />\r\n               </span>\r\n               <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                  <li><Link className=\"dropdown-item\" to={`/profile/${auth.user._id}`}>Profile</Link></li>\r\n                  <li><hr className=\"dropdown-divider\"></hr></li>\r\n                  <li><Link \r\n                  onClick={handleLogout}\r\n                  className=\"dropdown-item\" to={'#'}>Logout</Link></li>\r\n               </ul>\r\n            </li>\r\n         }\r\n      </ul>\r\n   )\r\n}\r\n\r\nexport default Menu","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport Menu from './Menu'\r\n\r\nconst Header = () => {\r\n   \r\n   return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-3\" style={{\r\n         position: 'sticky', top: 0, left: 0, zIndex: 98\r\n      }}>\r\n         <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">BlogInter</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n               <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n               <Search />\r\n               <Menu />\r\n            </div>\r\n         </div>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Footer = () => {\r\n   return (\r\n      <div className='text-center bg-light py-4'>\r\n         <h6>Welcome to NozeBlog</h6>\r\n         <a href=\"https://www.facebook.com/pqv69\" target='_blank' rel='noreferrer'\r\n            className='mb-2 d-block text-info'\r\n         >\r\n         https://www.facebook.com/pqv69\r\n         </a>\r\n         <p> Copyright &copy; 2021</p>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Footer","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { IComment, RootStore } from './utils/TypeScript'\r\nimport { CREATE_COMMENT, REPLY_COMMENT, \r\n   UPDATE_COMMENT, UPDATE_REPLY,\r\n   DELETE_COMMENT, DELETE_REPLY } from './redux/types/commentType'\r\nconst SocketClient = () => {\r\n   const { socket } = useSelector((state: RootStore) => state);\r\n   const dispatch = useDispatch();\r\n\r\n   // CREATE COMMENT\r\n   useEffect(() => {\r\n      if(!socket) return;\r\n      socket.on('createComment', (data: IComment) => {\r\n         dispatch({ type: CREATE_COMMENT, payload: data })\r\n      })\r\n      return () => {\r\n         socket.off('')\r\n      }\r\n   }, [socket, dispatch])\r\n\r\n   // REPLY COMMENT\r\n   useEffect(() => {\r\n      if(!socket) return;\r\n      socket.on('replyComment', (data: IComment) => {\r\n         dispatch({ type: REPLY_COMMENT, payload: data })\r\n      })\r\n      return () => {\r\n         socket.off('')\r\n      }\r\n   }, [socket, dispatch])\r\n\r\n   // UPDATE COMMENT\r\n   useEffect(() => {\r\n      if(!socket) return;\r\n      socket.on('updateComment', (data: IComment) => {\r\n         dispatch({ type: data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT, payload: data })\r\n      })\r\n      return () => {\r\n         socket.off('')\r\n      }\r\n   }, [socket, dispatch])\r\n\r\n   // DELETE COMMENT\r\n   useEffect(() => {\r\n      if(!socket) return;\r\n      socket.on('deleteComment', (data: IComment) => {\r\n         dispatch({\r\n            type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT,\r\n            payload: data\r\n         })\r\n      })\r\n      return () => {\r\n         socket.off('')\r\n      }\r\n   }, [socket, dispatch])\r\n   return (\r\n      <div>\r\n\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default SocketClient","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport PageRender from './PageRender'\r\nimport Header from './components/Global/Header'\r\nimport Footer from './components/Global/Footer'\r\nimport { refreshToken } from './redux/action/authAction'\r\nimport { Alert } from './components/alert/Alert'\r\nimport { gapi } from \"gapi-script\";\r\nimport { getCategory } from './redux/action/categoryAction'\r\nimport { getHomeBlogs } from './redux/action/blogAction'\r\nimport io from  'socket.io-client'\r\nimport SocketClient from './SocketClient'\r\nconst App = () => {\r\n  gapi.load(\"client:auth2\", () => {\r\n    gapi.client.init({\r\n      clientId:\r\n        \"*****.apps.googleusercontent.com\",\r\n      plugin_name: \"chat\",\r\n    });\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getHomeBlogs())\r\n    dispatch(getCategory())\r\n    dispatch(refreshToken())\r\n  }, [dispatch])\r\n\r\n\r\n  useEffect(() => {\r\n    const socket = io();\r\n    dispatch({ type: 'SOCKET', payload: socket })\r\n    return () => {\r\n      socket.close()\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"container\">\r\n      <SocketClient />\r\n      <Router>\r\n        <Header />\r\n        <Alert />\r\n        <Switch>\r\n          <Route exact path='/' component={PageRender} />\r\n          <Route exact path='/:page' component={PageRender} />\r\n          <Route exact path='/:page/:slug' component={PageRender} />\r\n        </Switch>\r\n        <Footer />\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import { AUTH, IAuthType, IAuth  } from \"../types/authType\";\r\n\r\nconst authReducer = (state: IAuth = {}, action: IAuthType) => { \r\n   switch (action.type) {\r\n      case AUTH: \r\n         return action.payload;\r\n      default : \r\n         return state;\r\n   }\r\n}\r\n\r\nexport default authReducer;","import { ALERT, IAlertType  } from \"../types/alertType\";\r\nimport { IAlert } from \"../../utils/TypeScript\";\r\n\r\nconst alertReducer = (state: IAlert = {}, action: IAlertType) => { \r\n   switch (action.type) {\r\n      case ALERT: \r\n         return action.payload;\r\n      default : \r\n         return state;\r\n   }\r\n}\r\n\r\nexport default alertReducer;","import * as types from \"../types/categoryType\";\r\nimport { ICategory } from \"../../utils/TypeScript\";\r\nconst categoryReducer = (state: ICategory[] = [], action: types.ICategoryType): ICategory[] => {\r\n   switch (action.type) {\r\n      case types.CREATE_CATEGORY:\r\n         return [action.payload, ...state];\r\n      case types.GET_CATEGORY:\r\n         return action.payload;\r\n      case types.UPDATE_CATEGORY:\r\n         return state.map(item => (\r\n            item._id === action.payload._id\r\n               ? { ...item, name: action.payload.name }\r\n               : item\r\n         ))\r\n      case types.DELETE_CATEGORY: \r\n            return state.filter((item) => item._id !== action.payload);\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default categoryReducer;","import { GET_HOME_BLOG, IHomeBlogs, IGetHomeBlogsType } from \"../types/blogType\";\r\n\r\nconst homeBlogsReducer = (state: IHomeBlogs[] = [], action: IGetHomeBlogsType): IHomeBlogs[] => {\r\n   switch(action.type) {\r\n      case GET_HOME_BLOG:\r\n         return action.payload;\r\n      default: \r\n         return state;\r\n   }\r\n}\r\n\r\n\r\nexport default homeBlogsReducer;","import { GET_BLOG_BY_CATEGORY_ID, IBlogsCategory, IGetBlogsByCategoryIdType } from \"../types/blogType\";\r\n\r\nconst blogCategoryReducer = (state: IBlogsCategory[] = [], action: IGetBlogsByCategoryIdType): IBlogsCategory[] => {\r\n   switch (action.type) {\r\n      case GET_BLOG_BY_CATEGORY_ID:\r\n         if(state.every(item => item.id !== action.payload.id)) {\r\n            return [...state, action.payload];\r\n         } else {\r\n            return state.map(blog => blog.id === action.payload.id ? action.payload : blog);\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default blogCategoryReducer;","import { GET_OTHER_INFO, IGetOtherInfo } from \"../types/profileType\";\r\nimport { IUser } from \"../../utils/TypeScript\";\r\n\r\n\r\nconst otherInfoReducer = (state: IUser[] = [], action: IGetOtherInfo): IUser[] => {\r\n   switch(action.type) {\r\n      case GET_OTHER_INFO:\r\n         if(state.every(item => item._id !== action.payload._id)) {\r\n            return [...state, action.payload]\r\n         } else {\r\n            return state.find(item => item._id ===  action.payload._id) ? state : [...state, action.payload]\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default otherInfoReducer;","import { GET_BLOGS_USER_ID, CREATE_BLOG_USER_ID, DELETE_BLOG_USER_ID, IBlogUserType, IBlogsUser } from \"../types/blogType\";\r\nimport { IUser } from \"../../utils/TypeScript\";\r\n\r\nconst blogUserReducer = (state: IBlogsUser[] = [], action: IBlogUserType): IBlogsUser[] => {\r\n   switch (action.type) {\r\n      case GET_BLOGS_USER_ID:\r\n         if (state.every(item => item.id !== action.payload.id)) {\r\n            return [...state, action.payload];\r\n         } else {\r\n            return state.map((item) => (item.id === action.payload.id ? action.payload : item));\r\n         }\r\n      case CREATE_BLOG_USER_ID:\r\n         return state.map(item => (\r\n            item.id === (action.payload.user as IUser)._id\r\n               ? {\r\n                  ...item,\r\n                  blogs: [action.payload, ...item.blogs]\r\n               }\r\n               : item\r\n         ))\r\n      case DELETE_BLOG_USER_ID:\r\n         return state.map(item => (\r\n            item.id === (action.payload.user as IUser)._id\r\n            ? {\r\n               ...item,\r\n               blogs: item.blogs.filter(blog => blog._id !== action.payload._id)\r\n            }: item\r\n         ))\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default blogUserReducer;","import { CREATE_COMMENT,\r\n         GET_COMMENTS, REPLY_COMMENT, \r\n         UPDATE_COMMENT, ICommentType, \r\n         UPDATE_REPLY, ICommentState ,\r\n         DELETE_COMMENT, DELETE_REPLY \r\n} from \"../types/commentType\";\r\n\r\nconst initState: ICommentState = {\r\n   data: [],\r\n   total: 1,\r\n}\r\n\r\nconst commentReducer = (state: ICommentState = initState, action: ICommentType) => {\r\n   switch (action.type) {\r\n      case CREATE_COMMENT:\r\n         return {\r\n            ...state,\r\n            data: [action.payload, ...state.data],\r\n         }\r\n      case GET_COMMENTS:\r\n         return action.payload;\r\n      case REPLY_COMMENT:\r\n         return {\r\n            ...state,\r\n            data: state.data.map(item => (\r\n               item._id === action.payload.comment_root\r\n                  ? {\r\n                     ...item,\r\n                     replyCM: [\r\n                        ...item.replyCM,\r\n                        action.payload\r\n                     ]\r\n                  }\r\n                  : item\r\n            ))\r\n         }\r\n      case UPDATE_COMMENT:\r\n         return {\r\n            ...state,\r\n            data: state.data.map(item => (\r\n               item._id === action.payload._id \r\n               ?\r\n               action.payload\r\n               :\r\n               item\r\n            ))\r\n         }\r\n      case UPDATE_REPLY:\r\n         return {\r\n            ...state,\r\n            data: state.data.map(item => (\r\n               item._id === action.payload.comment_root ?\r\n               {\r\n                  ...item,\r\n                  replyCM: item.replyCM?.map(reply => (\r\n                     reply._id === action.payload._id ?\r\n                     action.payload\r\n                     :\r\n                     reply\r\n                  ))\r\n               }\r\n               :\r\n               item\r\n            ))\r\n         }\r\n      case DELETE_COMMENT:\r\n            return {\r\n               ...state,\r\n               data: state.data.filter(item => (\r\n                  item._id !== action.payload._id\r\n               ))\r\n            }\r\n      case DELETE_REPLY:\r\n         return {\r\n            ...state,\r\n            data: state.data.map(item => (\r\n               item._id === action.payload.comment_root ?\r\n               {\r\n                  ...item,\r\n                  replyCM: item.replyCM?.filter(reply => (\r\n                     reply._id !== action.payload._id\r\n                  ))\r\n               }\r\n               :\r\n               item\r\n            ))\r\n         }\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\nexport default commentReducer;","import { Socket } from 'socket.io-client'\r\n\r\nexport const SOCKET = 'SOCKET';\r\n\r\nexport interface ISocketType {\r\n   type : typeof SOCKET;\r\n   payload:  Socket\r\n}","import { SOCKET,  ISocketType } from './../types/socketType';\r\nconst socketReducer = (state: any = null , action: ISocketType) => {\r\n   switch (action.type) {\r\n      case SOCKET: \r\n         return action.payload;\r\n      default:\r\n         return state;\r\n   }\r\n}\r\n\r\n\r\nexport default socketReducer;","import { combineReducers } from \"redux\";\r\nimport auth from \"./authReducer\";\r\nimport alert from \"./alertReducer\";\r\nimport category from \"./categoryReducer\";\r\nimport homeBLogs from \"./blogReducer\";\r\nimport blogCategory from './blogCategoryReducer'\r\nimport otherInfo from './otherInfoReducer'\r\nimport blogUser from './blogUserReducer'\r\nimport comments from './commentReducer'\r\nimport socket from './socketReducer'\r\nexport default combineReducers({\r\n   auth,\r\n   alert,\r\n   category,\r\n   homeBLogs,\r\n   blogCategory,\r\n   otherInfo,\r\n   blogUser,\r\n   comments,\r\n   socket\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducer/index'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './style/index.css'\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","export const checkImage = (file: File) => {\r\n   const types = ['image/png', 'image/jpeg'];\r\n   let err: string = ''\r\n   if(!file) err = 'file does not exist!';\r\n   if(file.size > 1024 * 1024) err = 'The largest file size is 1MB';\r\n   if(!types.includes(file.type)) \r\n      err = 'The image type is png / jpeg'\r\n   return err;\r\n}\r\n\r\nexport const imageUpload = async(file: File) => {\r\n   const formData = new FormData();\r\n   formData.append('file', file);\r\n   formData.append('upload_preset', 'wi5uwxua');\r\n   formData.append('cloud_name', 'noze-blog')\r\n\r\n   const res = await fetch('https://api.cloudinary.com/v1_1/noze-blog/upload', {\r\n      method: 'POST',\r\n      body: formData\r\n   })\r\n   const data = await res.json();\r\n   return {\r\n      public_id: data.public_id,\r\n      url: data.url\r\n   };\r\n}","import React from 'react'\r\n\r\nconst Loading = () => {\r\n   return (\r\n      <div className=\"position-fixed w-100 h-100 text-center loading\"\r\n         style={{ background: '#0007', color: \"white\", top: 0, left: 0, zIndex: 99 }}>\r\n         <svg width=\"205\" height=\"250\" viewBox=\"0 0 40 50\">\r\n            <polygon stroke=\"#fff\" strokeWidth=\"1\" fill=\"none\"\r\n               points=\"20,1 40,40 1,40\" />\r\n            <text fill=\"#fff\" x=\"5\" y=\"47\">Loading</text>\r\n         </svg>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Loading","import { IUserRegister } from \"./TypeScript\";\r\nimport { IBlog } from \"./TypeScript\";\r\n\r\n\r\nexport const ValidRegister = ({ name, account, password, cf_password }: IUserRegister) => {\r\n   const errors: string[] = [];\r\n   if (!name) {\r\n      errors.push('Please add your name!')\r\n   }\r\n   else if (name.length > 20) {\r\n      errors.push('Name must be less than 20 characters!')\r\n   }\r\n   // check account\r\n   if (!account) {\r\n      errors.push('Please add your account!')\r\n   }\r\n   else if (!validEmail(account) && !validPhone(account)) {\r\n      errors.push('Email or phone number format is incorrect!')\r\n   }\r\n   // check password\r\n   if (password.length < 6) {\r\n      errors.push('Password must be at least 6 characters!')\r\n   }\r\n   else if(password !== cf_password) {\r\n      errors.push('Password and confirm password must be the same!')\r\n   }\r\n\r\n\r\n   return {\r\n      errMsg: errors,\r\n      errLength: errors.length\r\n   }\r\n}\r\n\r\nexport const checkPassword = (password: string, cf_password: string) => {\r\n   let err = ''\r\n   if(password.length < 6) err = 'Password must be at least 6 characters!'\r\n   else if(password !== cf_password) err = 'Password and confirm password must be the same!'\r\n   return err\r\n}\r\n\r\nexport function validPhone(phone: string) {\r\n   const re = /^[+]/g;\r\n   return re.test(phone);\r\n}\r\n\r\nexport function validEmail(email: string) {\r\n   const regex = /^((?!\\.)[\\w\\-_.]*[^.])(@\\w+)(\\.\\w+(\\.\\w+)?[^.\\W])$/;\r\n   return regex.test(email);\r\n}\r\n\r\n\r\n// Valid Blog\r\n\r\nexport const validCreateBlog = ({ title, content, description, thumbnail, category }: IBlog) => {\r\n   let err: string[] = [];\r\n\r\n   if(title.trim().length < 10) err.push('Title has at least 10 characters.');\r\n   else if(title.trim().length > 50) err.push('Title is up to 50 character long.')\r\n\r\n   if(content.trim().length < 2000) err.push('Content has at least 2000 characters.');\r\n\r\n   if(description.trim().length < 50) err.push('Description has at least 50 characters.');\r\n   else if(description.trim().length > 200) err.push('Description is up to 200 character long.')\r\n\r\n   if(!thumbnail) err.push('Thumbnail cannot be left blank.');\r\n   \r\n   if(!category) err.push('Category cannot be left blank.')\r\n\r\n\r\n   return {\r\n      errMsg: err,\r\n      errLength: err.length\r\n   }\r\n}\r\n\r\n\r\n// Shallow Equality\r\nexport const shallowEquality = (obj1: IBlog, obj2: IBlog) => {\r\n   if(JSON.stringify(obj1) === JSON.stringify(obj2)) return true\r\n   return false\r\n}","import { ALERT } from './../types/alertType';\r\nimport { Dispatch } from \"react\"\r\nimport { AUTH, IAuth, IAuthType } from \"../types/authType\"\r\nimport { IAlertType } from \"../types/alertType\"\r\nimport { checkImage, imageUpload } from '../../utils/ImageUpload';\r\nimport { patchApi, getApi } from '../../utils/FetchData';\r\nimport { checkPassword } from '../../utils/Valid';\r\nimport { GET_OTHER_INFO, IGetOtherInfo } from '../types/profileType';\r\nimport { checkTokenExp } from '../../utils/checkTokenExp';\r\n\r\nexport const updateUser = (avatar: File, name: string, auth: IAuth) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      if (!auth.access_token || !auth.user) return;\r\n\r\n      const result = await checkTokenExp(auth.access_token, dispatch)\r\n      const access_token = result ? result : auth.access_token;\r\n      \r\n      let url = ''\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n\r\n         if (avatar) {\r\n            const check = checkImage(avatar)\r\n            if (check) {\r\n               return dispatch({\r\n                  type: ALERT,\r\n                  payload: { errors: check }\r\n               })\r\n            }\r\n            const photo = await imageUpload(avatar)\r\n            url = photo.url\r\n         }\r\n\r\n         await patchApi('user', {\r\n            name: name ? name : auth.user.name,\r\n            avatar: url ? url : auth.user.avatar\r\n         }, access_token);\r\n\r\n         dispatch({\r\n            type: AUTH,\r\n            payload: {\r\n               access_token: access_token,\r\n               user: {\r\n                  ...auth.user,\r\n                  name: name ? name : auth.user.name,\r\n                  avatar: url ? url : auth.user.avatar\r\n               }\r\n            }\r\n         })\r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false }\r\n         })\r\n      }\r\n      catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const resetPassword = (password: string, cf_password: string, token: string) => {\r\n   return async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n\r\n         const msg = checkPassword(password, cf_password)\r\n         if(msg) return dispatch({\r\n            type: ALERT,\r\n            payload: { errors: msg }\r\n         })\r\n\r\n         const res = await patchApi('reset_password', { password }, access_token )\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { success: res.data.msg}\r\n         })\r\n      }\r\n      catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      } \r\n   }\r\n}\r\n\r\n\r\nexport const getOtherInfo = (id: string) => {\r\n   return async(dispatch: Dispatch<IAlertType | IGetOtherInfo>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n         const res = await getApi(`user/${id}`)\r\n         \r\n         dispatch({\r\n            type: GET_OTHER_INFO,\r\n            payload: res.data\r\n         })\r\n\r\n         dispatch({\r\n            type: ALERT, \r\n            payload: { loading: false }\r\n         })\r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}","import { useDispatch } from 'react-redux';\r\nimport { ALERT } from '../../redux/types/alertType'\r\ninterface IProps {\r\n   title: string, \r\n   body: string | string[], \r\n   bgColor: string\r\n}\r\n\r\nconst Toast = ({title, body, bgColor}: IProps) => {\r\n   const dispatch = useDispatch();\r\n   const handleClose = () => {\r\n      dispatch({\r\n         type: ALERT,\r\n         payload: {}\r\n      })\r\n   }\r\n   return (\r\n      <div className={`toast show position-fixed text-light ${bgColor}`}\r\n         style={{ top: '5px', right: '5px', zIndex: 99, minWidth: '200px'}}\r\n      >\r\n         <div className=\"toast-header\">\r\n               <strong className=\"me-auto\">{title}</strong>\r\n               <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"toast\" aria-label=\"Close\"\r\n                  onClick={handleClose}\r\n               />\r\n         </div>\r\n         <div className=\"toast-body\">\r\n            {\r\n               typeof(body) === 'string' ?  \r\n                  body\r\n               : \r\n                  <ul>\r\n                     {\r\n                        body.map((item, index) => (\r\n                           <li key={index}>{item}</li>\r\n                        ))\r\n                     }\r\n                  </ul>\r\n            }\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Toast","import React from 'react'\r\nimport Loading from './Loading'\r\nimport Toast from './toast'\r\nimport  { useSelector } from 'react-redux'\r\nimport { RootStore  } from '../../utils/TypeScript'\r\nexport const Alert = () => {\r\n   const { alert } = useSelector((state: RootStore) => state)\r\n   return (\r\n      <div>\r\n         {\r\n            alert.loading && <Loading />\r\n         }\r\n         {\r\n            alert.errors && \r\n            <Toast\r\n               title=\"Error\"\r\n               body={alert.errors}\r\n               bgColor=\"bg-danger\"\r\n            />\r\n         }\r\n         {\r\n            alert.success &&\r\n            <Toast\r\n               title=\"Success\"\r\n               body={alert.success}\r\n               bgColor=\"bg-success\"\r\n            />\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport const showErrMsg = (msg: string) => {\r\n   return <div className='errMsg'>{msg}</div>\r\n}\r\n\r\nexport const showSuccessMsg = (msg: string) => {\r\n   return <div className='successMsg'>{msg}</div>\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\ninterface IProps {\r\n   total: number,\r\n   callback: (page: number) => void\r\n}\r\nconst Pagination = ({ total, callback }: IProps) => {\r\n   const [page, setPage] = useState(1)\r\n   const history = useHistory()\r\n   const newArr = [...Array(total)].map((_, i) => i + 1)\r\n\r\n\r\n   const isActive = (index: number) => {\r\n      if(index === page) return \"active\";\r\n      return \"\";\r\n   }\r\n\r\n   const handlePagination = (num: number) => {\r\n      history.push(`?page=${num}`)\r\n      setPage(num)\r\n      callback(num)\r\n   }\r\n\r\n   useEffect(() => {\r\n      const num = history.location.search.slice(6) || 1;\r\n      setPage(Number(num))\r\n   }, [history.location.search])\r\n\r\n   return (\r\n      <nav aria-label=\"Page navigation example\">\r\n         <ul className=\"pagination\">\r\n            {\r\n               page > 1 &&\r\n            <li className=\"page-item\" onClick={() => handlePagination(page - 1)} style={{ cursor: 'pointer'}}>\r\n               <span className=\"page-link\" aria-label=\"Previous\">\r\n                  <span aria-hidden=\"true\">&laquo;</span>\r\n               </span>\r\n            </li>\r\n            }\r\n            {\r\n               newArr && newArr.length > 0 &&\r\n               newArr.map(num => (\r\n                  <li className={`page-item ${isActive(num)}`} style={{ cursor: 'pointer'}} onClick={() => handlePagination(num)}>\r\n                     <span className=\"page-link\">{num}</span>\r\n                  </li>\r\n\r\n               ))\r\n            }\r\n            {\r\n               page < total &&\r\n            <li className=\"page-item\" onClick={() => handlePagination(page + 1)} style={{ cursor: 'pointer'}}>\r\n               <span className=\"page-link\"  aria-label=\"Next\" >\r\n                  <span aria-hidden=\"true\">&raquo;</span>\r\n               </span>\r\n            </li>\r\n            }\r\n         </ul>\r\n      </nav>\r\n   )\r\n}\r\n\r\nexport default Pagination","import React from 'react'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport { Link } from 'react-router-dom'\r\nimport { IParams, RootStore, IUser } from '../../utils/TypeScript'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteBlog } from '../../redux/action/blogAction'\r\ninterface IProps {\r\n   blog: IBlog\r\n}\r\n\r\nconst CardHoriz = ({ blog }: IProps) => {\r\n   const { slug } = useParams<IParams>()\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n   console.log(slug);\r\n   const dispatch = useDispatch()\r\n   const handleDelete = (blog: IBlog) => {\r\n      if(!auth.user || !auth.access_token) return;\r\n\r\n      if(window.confirm('Do you want to delete this post?')) {\r\n         dispatch(deleteBlog(blog, auth.access_token))\r\n      }\r\n   }\r\n   return (\r\n      <div className=\"card mb-3 rounded w-100\">\r\n         <div className=\"row g-0 p-2\">\r\n            <div className=\"col-md-4\" style={{\r\n               minHeight: '150px', maxHeight: '170px', overflow: 'hidden'\r\n            }}>\r\n               {\r\n                  blog.thumbnail &&\r\n                  <>\r\n                     {\r\n                        typeof (blog.thumbnail) === 'string' ?\r\n                           <Link to={`/blog/${blog._id}`}>\r\n                              <img src={blog.thumbnail}\r\n                                 className=\"img-fluid rounded-start\"\r\n                                 alt=\"thumb\"\r\n                                 style={{\r\n                                    width: '100%',\r\n                                    objectFit: 'cover',\r\n                                 }}\r\n                              />\r\n                           </Link>\r\n                           :\r\n                           <img src={URL.createObjectURL(blog.thumbnail)}\r\n                              className=\"img-fluid rounded-start\" alt=\"thumbnail\" />\r\n                     }\r\n                  </>\r\n               }\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n               <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">\r\n                     <Link to={`/blog/${blog._id}`} className='text-capitalize text-decoration-none'>\r\n                        {blog.title}\r\n                     </Link>\r\n                  </h5>\r\n                  <p className=\"card-text\">{blog.description}</p>\r\n                  {\r\n                     blog.title &&\r\n                     <p className=\"card-text d-flex justify-content-between\">\r\n                        {\r\n                           auth.user && slug && auth.user?._id === (blog.user as IUser)._id ?\r\n                           <small>\r\n                              <Link to={`/update_blog/${blog._id}`}>\r\n                                 <i className='fas fa-edit' title='edit blog'></i>\r\n                              </Link>\r\n\r\n                              <i className='fas fa-trash-alt'\r\n                                 style={{ marginLeft: '10px', color: 'crimson', cursor: 'pointer' }}\r\n                                 title='delete blog' \r\n                                 onClick={() => handleDelete(blog)}\r\n                                 />\r\n                           </small>\r\n                           :\r\n                           auth.user?.role === 'admin' &&\r\n                           <i className='fas fa-trash-alt'\r\n                                 style={{ marginLeft: '10px', color: 'crimson', cursor: 'pointer' }}\r\n                                 title='delete blog' \r\n                                 onClick={() => handleDelete(blog)}\r\n                           />\r\n                        }\r\n\r\n                        <small className=\"text-muted d-flex\" style={{ justifyContent: 'flex-end' }}>{\r\n                           new Date(blog.createdAt).toLocaleString()\r\n                        }</small></p>\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CardHoriz\r\n\r\n\r\n","import { ICategory } from './../../utils/TypeScript';\r\nimport { Dispatch } from \"react\"\r\nimport { ALERT, IAlertType } from \"../types/alertType\"\r\nimport { postApi, getApi, patchApi, delApi  } from \"../../utils/FetchData\"\r\nimport * as CateType from \"../types/categoryType\"\r\nimport { checkTokenExp } from '../../utils/checkTokenExp';\r\n\r\n\r\nexport const createCategory = (name: string, token: string) => {\r\n   return async (dispatch: Dispatch<IAlertType | CateType.ICategoryType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n\r\n         const res = await postApi('category', { name }, access_token)\r\n\r\n         dispatch({\r\n            type: CateType.CREATE_CATEGORY,\r\n            payload: res.data.newCategory\r\n         })\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false }\r\n         })\r\n      } catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const getCategory = () => {\r\n   return async (dispatch: Dispatch<CateType.ICategoryType | IAlertType>) => {\r\n      try {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true }\r\n         })\r\n\r\n         const response = await getApi('category')\r\n\r\n         dispatch({\r\n            type: CateType.GET_CATEGORY,  \r\n            payload: response.data.categories\r\n         })\r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false}\r\n         })\r\n      } catch (err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.message }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const updateCategory = (data: ICategory, token: string) => {\r\n   return async (dispatch: Dispatch<IAlertType | CateType.ICategoryType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         dispatch({\r\n            type: CateType.UPDATE_CATEGORY,\r\n            payload: data\r\n         })\r\n         await patchApi(`category/${data._id}`, { name: data.name },  access_token)         \r\n      \r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}\r\n\r\nexport const deleteCategory = (id: string, token: string) => {\r\n   return async (dispatch: Dispatch<IAlertType | CateType.ICategoryType>) => {\r\n      const result = await checkTokenExp(token, dispatch)\r\n      const access_token = result ? result : token;\r\n      try {\r\n         const res = await delApi(`category/${id}`, access_token)\r\n         if(res.data.errCode === 1) {\r\n            dispatch({\r\n               type: ALERT,\r\n               payload: { success: res.data.msg}\r\n            })\r\n         }\r\n         dispatch({\r\n            type: CateType.DELETE_CATEGORY,\r\n            payload: id\r\n         })\r\n \r\n      } catch(err: any) {\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { errors: err.response.data.msg }\r\n         })\r\n      }\r\n   }\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore, IBlog, InputChange } from '../../utils/TypeScript'\r\n\r\ninterface IProps {\r\n   blog: IBlog,\r\n   setBlog: (blog : IBlog) => void\r\n}\r\n\r\nconst CreateForm = ({blog, setBlog}: IProps) => {\r\n   const { category } = useSelector((state: RootStore) => state)\r\n   console.log(window.innerWidth);\r\n   \r\n   const handleChangeInput = (e: InputChange) => {\r\n      const { name, value } = e.target;\r\n      setBlog({...blog, [name]: value})\r\n   }\r\n\r\n   const handleChangeFile = (e: InputChange) => {\r\n      const target = e.target as HTMLInputElement;\r\n      const files = target.files;\r\n      if(files) {\r\n         setBlog({...blog, thumbnail: files[0]})\r\n      }\r\n   }\r\n   return (\r\n      <form>\r\n         <div className=\"form-group position-relative my-3\">\r\n            <input type=\"text\" className='form-control' \r\n            value={blog.title}\r\n            name='title'\r\n            onChange={handleChangeInput}\r\n            />\r\n            {\r\n               window.innerWidth > 415 &&\r\n            <small className='text-muted position-absolute'\r\n               style={{\r\n                  top: '50%', right: '10px',\r\n                  transform: 'translateY(-50%)'\r\n               }}\r\n            >\r\n               {blog.title.length}/50\r\n            </small>\r\n            }\r\n         </div>\r\n\r\n         <div className=\"form-group my-3\">\r\n            <input type=\"file\" className='form-control'\r\n               accept='image/*'\r\n               onChange={handleChangeFile}\r\n            />\r\n         </div>\r\n\r\n         <div className=\"form-group position-relative my-3\">\r\n            <textarea className='form-control' rows={4} \r\n               style={{ resize: 'none' }}\r\n               name='description'\r\n               value={blog.description}\r\n               onChange={handleChangeInput}\r\n            />\r\n            {\r\n               window.innerWidth > 415 && \r\n            <small className='text-muted position-absolute'\r\n               style={{\r\n                  bottom: 0, right: '5px',\r\n               }}\r\n            >\r\n               {blog.description.length}/200\r\n            </small>\r\n            }\r\n         </div>\r\n\r\n         <div className=\"form-group\">\r\n            <select className='form-control text-capitalize'\r\n               name='category'\r\n               value={blog.category}\r\n               onChange={handleChangeInput}\r\n            >\r\n               <option value=\"\">Choose a category</option>\r\n               {\r\n                  category && category.length > 0 &&\r\n                  category.map((item) => (\r\n                     <option key={item._id} value={item._id}>{item.name}</option>\r\n                  ))\r\n               }\r\n            </select>\r\n         </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default CreateForm","import React, { useRef, useEffect, useCallback } from 'react'\r\nimport ReactQuill from 'react-quill'; // ES6\r\nimport 'react-quill/dist/quill.snow.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { checkImage, imageUpload} from '../../utils/ImageUpload'\r\nimport { ALERT } from '../../redux/types/alertType'\r\ninterface IProps {\r\n   body: string\r\n   setBody: (body: string) => void\r\n}\r\n\r\nconst Quill = ({body,  setBody }: IProps) => {\r\n   const modules = { toolbar: { container } }\r\n   const quillRef = useRef<ReactQuill>(null)\r\n   const dispatch = useDispatch()\r\n   const handleChange = (e: any) => {\r\n      setBody(e);\r\n   }\r\n\r\n\r\n   const handleChangeImage = useCallback(() => {\r\n      const input = document.createElement('input');\r\n      input.type = 'file'\r\n      input.accept = 'image/*'\r\n      input.click();\r\n\r\n      input.onchange = async() => {\r\n         const files = input.files;\r\n         if(!files) return dispatch({\r\n            type: ALERT,\r\n            payload: { errors : 'File does not exist.'}\r\n         })\r\n\r\n         const file = files[0];\r\n         const check = checkImage(file)\r\n         \r\n         if(check) return dispatch({\r\n            type: ALERT,\r\n            payload: { errors : check }\r\n         })\r\n         \r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: true}\r\n         })\r\n\r\n         const photo = await imageUpload(file)\r\n\r\n         const quill = quillRef.current;\r\n         const range = quill?.getEditor().getSelection()?.index;\r\n         if(range !== undefined) {\r\n            quill?.getEditor().insertEmbed(range, 'image', `${photo.url}`)\r\n         }\r\n\r\n         dispatch({\r\n            type: ALERT,\r\n            payload: { loading: false }\r\n         })\r\n         \r\n      }\r\n   }, [dispatch])\r\n\r\n   useEffect(() => {\r\n      const quill = quillRef.current;\r\n      if(!quill) return;\r\n      \r\n      let toolbar = quill.getEditor().getModule('toolbar');\r\n      toolbar.addHandler('image', handleChangeImage)\r\n   }, [handleChangeImage])\r\n\r\n   return (\r\n      <div>\r\n         <ReactQuill theme=\"snow\"\r\n            modules={modules}\r\n            placeholder='Write somethings....'\r\n            onChange={handleChange}\r\n            value={body}\r\n            ref={quillRef}\r\n         />\r\n      </div>\r\n   )\r\n}\r\n\r\nlet container = [\r\n   [{ 'font': [] }],\r\n   [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n   [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n\r\n   ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n   ['blockquote', 'code-block'],\r\n   [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n   [{ 'script': 'sub' }, { 'script': 'super' }],      // superscript/subscript\r\n\r\n   [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n   [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent\r\n   [{ 'direction': 'rtl' }],                         // text direction\r\n   [{ 'align': [] }],\r\n\r\n   ['clean', 'link', 'image', 'video']\r\n]\r\n\r\nexport default Quill","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore } from '../utils/TypeScript'\r\nimport CreateForm from '../components/cards/CreateForm'\r\nimport CardHoriz from '../components/cards/CardHoriz'\r\nimport NotFound from '../components/Global/NotFound'\r\nimport Quill from '../components/editor/ReactQuill'\r\nimport { imageUpload } from '../utils/ImageUpload'\r\nimport  { IBlog, IUser } from '../utils/TypeScript'\r\nimport { validCreateBlog, shallowEquality } from '../utils/Valid'\r\nimport { ALERT } from '../redux/types/alertType'\r\nimport { createBlog, updateBlog } from '../redux/action/blogAction'\r\nimport { getApi } from '../utils/FetchData'\r\n\r\n\r\ninterface IProps {\r\n   id?: string\r\n}\r\nconst CreateBlog = ({ id }: IProps) => {\r\n   const initState = {\r\n      user: '',\r\n      title: '',\r\n      content: '',\r\n      description: '',\r\n      thumbnail: '',\r\n      category: '',\r\n      createdAt: new Date().toISOString() \r\n   }\r\n   const [blog, setBlog]  = useState<IBlog>(initState)\r\n   const [body, setBody] = useState('')\r\n   const [text, setText] = useState('');\r\n   const { auth } = useSelector((state: RootStore) => state)\r\n   const dispatch = useDispatch()\r\n   const divRef = useRef<HTMLDivElement>(null)\r\n   const [oldData, setOldData] = useState<IBlog>(initState)    \r\n\r\n   useEffect(() => {\r\n      if(!id) return;\r\n\r\n      getApi(`blog/${id}`)\r\n         .then(res => {\r\n            setBlog(res.data)\r\n            setBody(res.data.content)\r\n            setOldData(res.data)\r\n      }) \r\n         .catch(err => {\r\n            console.log(err);\r\n         })\r\n      return () => {\r\n         setBlog(initState)\r\n         setBody('')\r\n         setOldData(initState)\r\n      }\r\n   }, [id, dispatch])\r\n\r\n   useEffect(() => {\r\n      const div = divRef.current;\r\n      console.log(div);\r\n      \r\n      if(!div) return;\r\n      const text = (div?.innerText as string);\r\n      setText(text);      \r\n   }, [body])  \r\n\r\n   const handleSubmit = async() => {\r\n      if(!auth.access_token) return;\r\n      const check = validCreateBlog({ ...blog, content: text})\r\n\r\n      if(check.errLength !==0 ) return dispatch({\r\n         type: ALERT,\r\n         payload: { errors: check.errMsg }\r\n      })\r\n   \r\n      let newData = {...blog, content: body}\r\n\r\n      if(id) {\r\n         const result = shallowEquality(oldData, newData)\r\n         if(!result) {\r\n            if(!(auth.user?._id === (blog.user as IUser)._id)) {\r\n               return dispatch({\r\n                  type: ALERT,\r\n                  payload: { errors: 'Invalid Authentication!'}\r\n               })\r\n            }\r\n            dispatch(updateBlog(newData, auth.access_token))\r\n         } else {\r\n            dispatch({\r\n               type :ALERT,\r\n               payload: { errors: 'The data does not change.'}\r\n            })\r\n         }\r\n      }\r\n      else {\r\n         dispatch(createBlog(newData, auth.access_token))\r\n      }\r\n   }\r\n\r\n   if(!auth.access_token) return <NotFound />\r\n   return (\r\n      <div className='my-4 create_blog'>\r\n         <h2>Create Blog</h2>\r\n\r\n         <div className=\"row mt-4\">\r\n            <div className=\"col-md-6\">\r\n               <h5>Create</h5>\r\n               <CreateForm blog={blog} setBlog={setBlog} />\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n               <h5 className='mt-3 mb-2'>Preview</h5>\r\n               <CardHoriz blog={blog} />\r\n            </div>\r\n         </div>\r\n\r\n         <div className='mt-5'>\r\n            <Quill body={body} setBody={setBody} />\r\n            <small>{text.length}</small>\r\n            <div ref={divRef}  dangerouslySetInnerHTML = {{\r\n               __html: body\r\n            }} style={{ display: 'none'}} />\r\n         </div>\r\n\r\n         <button className='btn btn-dark mt-3 d-block mx-auto'\r\n            onClick={handleSubmit}\r\n         >\r\n            { id ? 'Update Post': \"Create Post\"}\r\n         </button>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CreateBlog","import React, { useState, useEffect} from 'react'\r\nimport { IBlog } from '../../utils/TypeScript'\r\nimport { Link } from 'react-router-dom'\r\nimport  Loading  from '../Global/Loading'\r\ninterface IProps {\r\n   blog: IBlog\r\n}\r\nconst CartVert = ({ blog }: IProps) => {\r\n   return (\r\n      <div className=\"card\">\r\n         {\r\n            typeof(blog.thumbnail) === 'string' &&\r\n            <img src={blog.thumbnail} className=\"card-img-top\" alt=\"...\" \r\n               style={{ height: '180px', objectFit: 'cover'}}\r\n            />\r\n         }\r\n            <div className=\"card-body\">\r\n               <h5 className=\"card-title\">\r\n                  <Link to={`/blog/${blog._id}`}>\r\n                     {blog.title.slice(0, 40) +  '...'}\r\n                  </Link>\r\n               </h5>\r\n               <p className=\"card-text\">\r\n                  {blog.description.slice(0, 100) + '...'} \r\n               </p>\r\n               <p className='card-text d-flex justify-content-between'>\r\n                  <small text-muted text-capitalize>\r\n                     {\r\n                        typeof(blog.user) !== 'string' && \r\n                        <Link to={`/profile/${blog.user._id}`}>\r\n                           By: {blog.user.name}\r\n                        </Link>\r\n                     }\r\n                  </small>\r\n\r\n                  <small text-muted>\r\n                     {\r\n                        new Date(blog.createdAt).toLocaleString()\r\n                     }\r\n                  </small>\r\n               </p>\r\n            </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CartVert","import React from 'react'\r\n\r\nconst Loading = () => {\r\n   return (\r\n      <div className=\"d-flex justify-content-center\">\r\n         <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Loading","import { IUser } from \"../../utils/TypeScript\";\r\n\r\nexport const GET_OTHER_INFO = \"GET_OTHER_INFO\";\r\n\r\n\r\nexport interface IGetOtherInfo {\r\n   type: typeof GET_OTHER_INFO,\r\n   payload: IUser\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootStore } from '../utils/TypeScript'\r\nimport CartVert from '../components/cards/CartVert'\r\nimport Loading from '../components/Global/Loading'\r\nconst Home = () => {\r\n   const { homeBLogs } = useSelector((state: RootStore) => state)\r\n\r\n   if(homeBLogs.length == 0) return <Loading />\r\n   return (\r\n      <div className='home_page'>\r\n         {\r\n            homeBLogs && homeBLogs.length > 0 &&\r\n            homeBLogs.map((homeBlog) => (\r\n               <div key={homeBlog._id}>\r\n                  {\r\n                     homeBlog.count > 0 &&\r\n                     <>\r\n                        <h3>\r\n                           <Link to={`/blogs/${homeBlog.name}`}>\r\n                              {homeBlog.name}\r\n                           </Link>\r\n                        </h3>\r\n                        <hr className='mt-1' />\r\n\r\n                        <div className=\"home_blogs\">\r\n                           {\r\n                              homeBlog.blogs.map((blog) => (\r\n                                 <CartVert key={blog._id} blog={blog} />\r\n                              ))\r\n                           }\r\n                        </div>\r\n                     </>\r\n                  }\r\n\r\n\r\n                  {\r\n                     homeBlog.count > 4 &&\r\n                     <Link className='text-end d-block mt-2 mb-3' to={`/blogs/${homeBlog.name}`}>\r\n                        Read more &gt;&gt;\r\n                     </Link>\r\n                  }\r\n               </div>\r\n            ))\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Home","// export const API_URL = 'http://localhost:5000';\r\n\r\n\r\nexport const API_URL = 'https://blog-dev-winter.herokuapp.com/'","import axios from 'axios';\r\nimport { API_URL } from './config';\r\n\r\n\r\nexport const postApi = async(url: string, post: object, token?: string ) => {\r\n   const res = await axios.post( `${API_URL}/api/${url}`, post, {\r\n      headers: { Authorization: token}\r\n   })\r\n   return res;\r\n}\r\n\r\nexport const getApi = async(url: string, token?: string ) => {\r\n   const res = await axios.get(`${API_URL}/api/${url}`, {\r\n      headers: { Authorization: token}\r\n   })\r\n   return res;\r\n}\r\n\r\nexport const patchApi = async(url: string, post: object, token?: string ) => {\r\n   const res = await axios.patch( `${API_URL}/api/${url}`, post, {\r\n      headers: { Authorization: token}\r\n   })\r\n   return res;\r\n}\r\n\r\nexport const putApi = async(url: string, post: object, token?: string ) => {\r\n   const res = await axios.put( `${API_URL}/api/${url}`, post, {\r\n      headers: { Authorization: token}\r\n   })\r\n   return res;\r\n}\r\n\r\nexport const delApi = async(url: string, token?: string ) => {\r\n   const res = await axios.delete( `${API_URL}/api/${url}`, {\r\n      headers: { Authorization: token}\r\n   })\r\n   return res;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from '../../utils/TypeScript'\r\nimport { postApi } from '../../utils/FetchData'\r\nimport { showErrMsg, showSuccessMsg } from '../../components/alert/Alert'\r\nconst Active = () => {\r\n   const { slug }: IParams = useParams();\r\n   const [errMsg, setErrMsg] = useState('');\r\n   const [successMsg, setSuccessMsg] = useState('');\r\n   useEffect(() => {\r\n      if (slug) {\r\n         postApi('active', { active_token: slug })\r\n            .then(res => setSuccessMsg(res.data.msg))\r\n            .catch(err => setErrMsg(err.response.data.msg))\r\n      }\r\n   }, [slug])\r\n   return (\r\n      <div>\r\n         {\r\n            errMsg && showErrMsg(errMsg)\r\n         }\r\n         {\r\n            successMsg && showSuccessMsg(successMsg)\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Active"],"sourceRoot":""}